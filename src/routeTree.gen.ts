/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SellerRouteImport } from './routes/seller/route'
import { Route as CustomerRouteImport } from './routes/customer/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as CustomerUpdatePasswordImport } from './routes/customer/update-password'
import { Route as SellerProfileIndexImport } from './routes/seller/profile/index'
import { Route as SellerDashboardIndexImport } from './routes/seller/dashboard/index'
import { Route as CustomerProfileIndexImport } from './routes/customer/profile/index'
import { Route as AdminProfileIndexImport } from './routes/admin/profile/index'
import { Route as AdminDashboardIndexImport } from './routes/admin/dashboard/index'
import { Route as SellerDashboardUpdatePasswordImport } from './routes/seller/dashboard/update-password'
import { Route as SellerDashboardBusinessInformationImport } from './routes/seller/dashboard/business-information'
import { Route as SellerDashboardAccountSettingsImport } from './routes/seller/dashboard/account-settings'
import { Route as CustomerProfileUpdateImport } from './routes/customer/profile/update'
import { Route as AuthSellerRegisterImport } from './routes/auth/seller/register'
import { Route as AuthSellerLoginImport } from './routes/auth/seller/login'
import { Route as AuthAdminLoginImport } from './routes/auth/admin/login'
import { Route as AuthcustomerRegisterImport } from './routes/auth/(customer)/register'
import { Route as AuthcustomerLoginImport } from './routes/auth/(customer)/login'
import { Route as AdminDashboardUpdatePasswordImport } from './routes/admin/dashboard/update-password'
import { Route as AdminDashboardAccountSettingsImport } from './routes/admin/dashboard/account-settings'
import { Route as SellerDashboardProductsIndexImport } from './routes/seller/dashboard/products/index'
import { Route as AdminDashboardSellersIndexImport } from './routes/admin/dashboard/sellers/index'
import { Route as AdminDashboardCustomersIndexImport } from './routes/admin/dashboard/customers/index'
import { Route as AdminDashboardCategoriesIndexImport } from './routes/admin/dashboard/categories/index'
import { Route as AdminDashboardAdminsIndexImport } from './routes/admin/dashboard/admins/index'
import { Route as SellerDashboardProductsCreateImport } from './routes/seller/dashboard/products/create'
import { Route as SellerDashboardProductsIdImport } from './routes/seller/dashboard/products/$id'
import { Route as AuthSellerVerifyCodeImport } from './routes/auth/seller/verify/$code'
import { Route as AuthcustomerVerifyCodeImport } from './routes/auth/(customer)/verify/$code'
import { Route as AdminDashboardSellersIdImport } from './routes/admin/dashboard/sellers/$id'
import { Route as AdminDashboardCategoriesCreateImport } from './routes/admin/dashboard/categories/create'
import { Route as AdminDashboardAdminsCreateImport } from './routes/admin/dashboard/admins/create'
import { Route as AdminDashboardCategorieseditIdImport } from './routes/admin/dashboard/categories/(edit)/$id'
import { Route as AdminDashboardAdminseditIdImport } from './routes/admin/dashboard/admins/(edit)/$id'

// Create/Update Routes

const SellerRouteRoute = SellerRouteImport.update({
  id: '/seller',
  path: '/seller',
  getParentRoute: () => rootRoute,
} as any)

const CustomerRouteRoute = CustomerRouteImport.update({
  id: '/customer',
  path: '/customer',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CustomerUpdatePasswordRoute = CustomerUpdatePasswordImport.update({
  id: '/update-password',
  path: '/update-password',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const SellerProfileIndexRoute = SellerProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const SellerDashboardIndexRoute = SellerDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const CustomerProfileIndexRoute = CustomerProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const AdminProfileIndexRoute = AdminProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const SellerDashboardUpdatePasswordRoute =
  SellerDashboardUpdatePasswordImport.update({
    id: '/dashboard/update-password',
    path: '/dashboard/update-password',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerDashboardBusinessInformationRoute =
  SellerDashboardBusinessInformationImport.update({
    id: '/dashboard/business-information',
    path: '/dashboard/business-information',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerDashboardAccountSettingsRoute =
  SellerDashboardAccountSettingsImport.update({
    id: '/dashboard/account-settings',
    path: '/dashboard/account-settings',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const CustomerProfileUpdateRoute = CustomerProfileUpdateImport.update({
  id: '/profile/update',
  path: '/profile/update',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const AuthSellerRegisterRoute = AuthSellerRegisterImport.update({
  id: '/seller/register',
  path: '/seller/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSellerLoginRoute = AuthSellerLoginImport.update({
  id: '/seller/login',
  path: '/seller/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthAdminLoginRoute = AuthAdminLoginImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthcustomerRegisterRoute = AuthcustomerRegisterImport.update({
  id: '/(customer)/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthcustomerLoginRoute = AuthcustomerLoginImport.update({
  id: '/(customer)/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AdminDashboardUpdatePasswordRoute =
  AdminDashboardUpdatePasswordImport.update({
    id: '/dashboard/update-password',
    path: '/dashboard/update-password',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardAccountSettingsRoute =
  AdminDashboardAccountSettingsImport.update({
    id: '/dashboard/account-settings',
    path: '/dashboard/account-settings',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const SellerDashboardProductsIndexRoute =
  SellerDashboardProductsIndexImport.update({
    id: '/dashboard/products/',
    path: '/dashboard/products/',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const AdminDashboardSellersIndexRoute = AdminDashboardSellersIndexImport.update(
  {
    id: '/dashboard/sellers/',
    path: '/dashboard/sellers/',
    getParentRoute: () => AdminRouteRoute,
  } as any,
)

const AdminDashboardCustomersIndexRoute =
  AdminDashboardCustomersIndexImport.update({
    id: '/dashboard/customers/',
    path: '/dashboard/customers/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardCategoriesIndexRoute =
  AdminDashboardCategoriesIndexImport.update({
    id: '/dashboard/categories/',
    path: '/dashboard/categories/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardAdminsIndexRoute = AdminDashboardAdminsIndexImport.update({
  id: '/dashboard/admins/',
  path: '/dashboard/admins/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const SellerDashboardProductsCreateRoute =
  SellerDashboardProductsCreateImport.update({
    id: '/dashboard/products/create',
    path: '/dashboard/products/create',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerDashboardProductsIdRoute = SellerDashboardProductsIdImport.update({
  id: '/dashboard/products/$id',
  path: '/dashboard/products/$id',
  getParentRoute: () => SellerRouteRoute,
} as any)

const AuthSellerVerifyCodeRoute = AuthSellerVerifyCodeImport.update({
  id: '/seller/verify/$code',
  path: '/seller/verify/$code',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthcustomerVerifyCodeRoute = AuthcustomerVerifyCodeImport.update({
  id: '/(customer)/verify/$code',
  path: '/verify/$code',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AdminDashboardSellersIdRoute = AdminDashboardSellersIdImport.update({
  id: '/dashboard/sellers/$id',
  path: '/dashboard/sellers/$id',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardCategoriesCreateRoute =
  AdminDashboardCategoriesCreateImport.update({
    id: '/dashboard/categories/create',
    path: '/dashboard/categories/create',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardAdminsCreateRoute = AdminDashboardAdminsCreateImport.update(
  {
    id: '/dashboard/admins/create',
    path: '/dashboard/admins/create',
    getParentRoute: () => AdminRouteRoute,
  } as any,
)

const AdminDashboardCategorieseditIdRoute =
  AdminDashboardCategorieseditIdImport.update({
    id: '/dashboard/categories/(edit)/$id',
    path: '/dashboard/categories/$id',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardAdminseditIdRoute = AdminDashboardAdminseditIdImport.update(
  {
    id: '/dashboard/admins/(edit)/$id',
    path: '/dashboard/admins/$id',
    getParentRoute: () => AdminRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/customer': {
      id: '/customer'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof CustomerRouteImport
      parentRoute: typeof rootRoute
    }
    '/seller': {
      id: '/seller'
      path: '/seller'
      fullPath: '/seller'
      preLoaderRoute: typeof SellerRouteImport
      parentRoute: typeof rootRoute
    }
    '/customer/update-password': {
      id: '/customer/update-password'
      path: '/update-password'
      fullPath: '/customer/update-password'
      preLoaderRoute: typeof CustomerUpdatePasswordImport
      parentRoute: typeof CustomerRouteImport
    }
    '/admin/dashboard/account-settings': {
      id: '/admin/dashboard/account-settings'
      path: '/dashboard/account-settings'
      fullPath: '/admin/dashboard/account-settings'
      preLoaderRoute: typeof AdminDashboardAccountSettingsImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/update-password': {
      id: '/admin/dashboard/update-password'
      path: '/dashboard/update-password'
      fullPath: '/admin/dashboard/update-password'
      preLoaderRoute: typeof AdminDashboardUpdatePasswordImport
      parentRoute: typeof AdminRouteImport
    }
    '/auth/(customer)/login': {
      id: '/auth/(customer)/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthcustomerLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/(customer)/register': {
      id: '/auth/(customer)/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthcustomerRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/admin/login': {
      id: '/auth/admin/login'
      path: '/admin/login'
      fullPath: '/auth/admin/login'
      preLoaderRoute: typeof AuthAdminLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/seller/login': {
      id: '/auth/seller/login'
      path: '/seller/login'
      fullPath: '/auth/seller/login'
      preLoaderRoute: typeof AuthSellerLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/seller/register': {
      id: '/auth/seller/register'
      path: '/seller/register'
      fullPath: '/auth/seller/register'
      preLoaderRoute: typeof AuthSellerRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/customer/profile/update': {
      id: '/customer/profile/update'
      path: '/profile/update'
      fullPath: '/customer/profile/update'
      preLoaderRoute: typeof CustomerProfileUpdateImport
      parentRoute: typeof CustomerRouteImport
    }
    '/seller/dashboard/account-settings': {
      id: '/seller/dashboard/account-settings'
      path: '/dashboard/account-settings'
      fullPath: '/seller/dashboard/account-settings'
      preLoaderRoute: typeof SellerDashboardAccountSettingsImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/dashboard/business-information': {
      id: '/seller/dashboard/business-information'
      path: '/dashboard/business-information'
      fullPath: '/seller/dashboard/business-information'
      preLoaderRoute: typeof SellerDashboardBusinessInformationImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/dashboard/update-password': {
      id: '/seller/dashboard/update-password'
      path: '/dashboard/update-password'
      fullPath: '/seller/dashboard/update-password'
      preLoaderRoute: typeof SellerDashboardUpdatePasswordImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/': {
      id: '/admin/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/profile/': {
      id: '/admin/profile/'
      path: '/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof AdminProfileIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/customer/profile/': {
      id: '/customer/profile/'
      path: '/profile'
      fullPath: '/customer/profile'
      preLoaderRoute: typeof CustomerProfileIndexImport
      parentRoute: typeof CustomerRouteImport
    }
    '/seller/dashboard/': {
      id: '/seller/dashboard/'
      path: '/dashboard'
      fullPath: '/seller/dashboard'
      preLoaderRoute: typeof SellerDashboardIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/profile/': {
      id: '/seller/profile/'
      path: '/profile'
      fullPath: '/seller/profile'
      preLoaderRoute: typeof SellerProfileIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/admins/create': {
      id: '/admin/dashboard/admins/create'
      path: '/dashboard/admins/create'
      fullPath: '/admin/dashboard/admins/create'
      preLoaderRoute: typeof AdminDashboardAdminsCreateImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/categories/create': {
      id: '/admin/dashboard/categories/create'
      path: '/dashboard/categories/create'
      fullPath: '/admin/dashboard/categories/create'
      preLoaderRoute: typeof AdminDashboardCategoriesCreateImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/sellers/$id': {
      id: '/admin/dashboard/sellers/$id'
      path: '/dashboard/sellers/$id'
      fullPath: '/admin/dashboard/sellers/$id'
      preLoaderRoute: typeof AdminDashboardSellersIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/auth/(customer)/verify/$code': {
      id: '/auth/(customer)/verify/$code'
      path: '/verify/$code'
      fullPath: '/auth/verify/$code'
      preLoaderRoute: typeof AuthcustomerVerifyCodeImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/seller/verify/$code': {
      id: '/auth/seller/verify/$code'
      path: '/seller/verify/$code'
      fullPath: '/auth/seller/verify/$code'
      preLoaderRoute: typeof AuthSellerVerifyCodeImport
      parentRoute: typeof AuthRouteImport
    }
    '/seller/dashboard/products/$id': {
      id: '/seller/dashboard/products/$id'
      path: '/dashboard/products/$id'
      fullPath: '/seller/dashboard/products/$id'
      preLoaderRoute: typeof SellerDashboardProductsIdImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/dashboard/products/create': {
      id: '/seller/dashboard/products/create'
      path: '/dashboard/products/create'
      fullPath: '/seller/dashboard/products/create'
      preLoaderRoute: typeof SellerDashboardProductsCreateImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/admins/': {
      id: '/admin/dashboard/admins/'
      path: '/dashboard/admins'
      fullPath: '/admin/dashboard/admins'
      preLoaderRoute: typeof AdminDashboardAdminsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/categories/': {
      id: '/admin/dashboard/categories/'
      path: '/dashboard/categories'
      fullPath: '/admin/dashboard/categories'
      preLoaderRoute: typeof AdminDashboardCategoriesIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/customers/': {
      id: '/admin/dashboard/customers/'
      path: '/dashboard/customers'
      fullPath: '/admin/dashboard/customers'
      preLoaderRoute: typeof AdminDashboardCustomersIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/sellers/': {
      id: '/admin/dashboard/sellers/'
      path: '/dashboard/sellers'
      fullPath: '/admin/dashboard/sellers'
      preLoaderRoute: typeof AdminDashboardSellersIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/seller/dashboard/products/': {
      id: '/seller/dashboard/products/'
      path: '/dashboard/products'
      fullPath: '/seller/dashboard/products'
      preLoaderRoute: typeof SellerDashboardProductsIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/admins/(edit)/$id': {
      id: '/admin/dashboard/admins/(edit)/$id'
      path: '/dashboard/admins/$id'
      fullPath: '/admin/dashboard/admins/$id'
      preLoaderRoute: typeof AdminDashboardAdminseditIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/categories/(edit)/$id': {
      id: '/admin/dashboard/categories/(edit)/$id'
      path: '/dashboard/categories/$id'
      fullPath: '/admin/dashboard/categories/$id'
      preLoaderRoute: typeof AdminDashboardCategorieseditIdImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminDashboardAccountSettingsRoute: typeof AdminDashboardAccountSettingsRoute
  AdminDashboardUpdatePasswordRoute: typeof AdminDashboardUpdatePasswordRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  AdminProfileIndexRoute: typeof AdminProfileIndexRoute
  AdminDashboardAdminsCreateRoute: typeof AdminDashboardAdminsCreateRoute
  AdminDashboardCategoriesCreateRoute: typeof AdminDashboardCategoriesCreateRoute
  AdminDashboardSellersIdRoute: typeof AdminDashboardSellersIdRoute
  AdminDashboardAdminsIndexRoute: typeof AdminDashboardAdminsIndexRoute
  AdminDashboardCategoriesIndexRoute: typeof AdminDashboardCategoriesIndexRoute
  AdminDashboardCustomersIndexRoute: typeof AdminDashboardCustomersIndexRoute
  AdminDashboardSellersIndexRoute: typeof AdminDashboardSellersIndexRoute
  AdminDashboardAdminseditIdRoute: typeof AdminDashboardAdminseditIdRoute
  AdminDashboardCategorieseditIdRoute: typeof AdminDashboardCategorieseditIdRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminDashboardAccountSettingsRoute: AdminDashboardAccountSettingsRoute,
  AdminDashboardUpdatePasswordRoute: AdminDashboardUpdatePasswordRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  AdminProfileIndexRoute: AdminProfileIndexRoute,
  AdminDashboardAdminsCreateRoute: AdminDashboardAdminsCreateRoute,
  AdminDashboardCategoriesCreateRoute: AdminDashboardCategoriesCreateRoute,
  AdminDashboardSellersIdRoute: AdminDashboardSellersIdRoute,
  AdminDashboardAdminsIndexRoute: AdminDashboardAdminsIndexRoute,
  AdminDashboardCategoriesIndexRoute: AdminDashboardCategoriesIndexRoute,
  AdminDashboardCustomersIndexRoute: AdminDashboardCustomersIndexRoute,
  AdminDashboardSellersIndexRoute: AdminDashboardSellersIndexRoute,
  AdminDashboardAdminseditIdRoute: AdminDashboardAdminseditIdRoute,
  AdminDashboardCategorieseditIdRoute: AdminDashboardCategorieseditIdRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthcustomerLoginRoute: typeof AuthcustomerLoginRoute
  AuthcustomerRegisterRoute: typeof AuthcustomerRegisterRoute
  AuthAdminLoginRoute: typeof AuthAdminLoginRoute
  AuthSellerLoginRoute: typeof AuthSellerLoginRoute
  AuthSellerRegisterRoute: typeof AuthSellerRegisterRoute
  AuthcustomerVerifyCodeRoute: typeof AuthcustomerVerifyCodeRoute
  AuthSellerVerifyCodeRoute: typeof AuthSellerVerifyCodeRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthcustomerLoginRoute: AuthcustomerLoginRoute,
  AuthcustomerRegisterRoute: AuthcustomerRegisterRoute,
  AuthAdminLoginRoute: AuthAdminLoginRoute,
  AuthSellerLoginRoute: AuthSellerLoginRoute,
  AuthSellerRegisterRoute: AuthSellerRegisterRoute,
  AuthcustomerVerifyCodeRoute: AuthcustomerVerifyCodeRoute,
  AuthSellerVerifyCodeRoute: AuthSellerVerifyCodeRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface CustomerRouteRouteChildren {
  CustomerUpdatePasswordRoute: typeof CustomerUpdatePasswordRoute
  CustomerProfileUpdateRoute: typeof CustomerProfileUpdateRoute
  CustomerProfileIndexRoute: typeof CustomerProfileIndexRoute
}

const CustomerRouteRouteChildren: CustomerRouteRouteChildren = {
  CustomerUpdatePasswordRoute: CustomerUpdatePasswordRoute,
  CustomerProfileUpdateRoute: CustomerProfileUpdateRoute,
  CustomerProfileIndexRoute: CustomerProfileIndexRoute,
}

const CustomerRouteRouteWithChildren = CustomerRouteRoute._addFileChildren(
  CustomerRouteRouteChildren,
)

interface SellerRouteRouteChildren {
  SellerDashboardAccountSettingsRoute: typeof SellerDashboardAccountSettingsRoute
  SellerDashboardBusinessInformationRoute: typeof SellerDashboardBusinessInformationRoute
  SellerDashboardUpdatePasswordRoute: typeof SellerDashboardUpdatePasswordRoute
  SellerDashboardIndexRoute: typeof SellerDashboardIndexRoute
  SellerProfileIndexRoute: typeof SellerProfileIndexRoute
  SellerDashboardProductsIdRoute: typeof SellerDashboardProductsIdRoute
  SellerDashboardProductsCreateRoute: typeof SellerDashboardProductsCreateRoute
  SellerDashboardProductsIndexRoute: typeof SellerDashboardProductsIndexRoute
}

const SellerRouteRouteChildren: SellerRouteRouteChildren = {
  SellerDashboardAccountSettingsRoute: SellerDashboardAccountSettingsRoute,
  SellerDashboardBusinessInformationRoute:
    SellerDashboardBusinessInformationRoute,
  SellerDashboardUpdatePasswordRoute: SellerDashboardUpdatePasswordRoute,
  SellerDashboardIndexRoute: SellerDashboardIndexRoute,
  SellerProfileIndexRoute: SellerProfileIndexRoute,
  SellerDashboardProductsIdRoute: SellerDashboardProductsIdRoute,
  SellerDashboardProductsCreateRoute: SellerDashboardProductsCreateRoute,
  SellerDashboardProductsIndexRoute: SellerDashboardProductsIndexRoute,
}

const SellerRouteRouteWithChildren = SellerRouteRoute._addFileChildren(
  SellerRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/customer': typeof CustomerRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/customer/update-password': typeof CustomerUpdatePasswordRoute
  '/admin/dashboard/account-settings': typeof AdminDashboardAccountSettingsRoute
  '/admin/dashboard/update-password': typeof AdminDashboardUpdatePasswordRoute
  '/auth/login': typeof AuthcustomerLoginRoute
  '/auth/register': typeof AuthcustomerRegisterRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/seller/login': typeof AuthSellerLoginRoute
  '/auth/seller/register': typeof AuthSellerRegisterRoute
  '/customer/profile/update': typeof CustomerProfileUpdateRoute
  '/seller/dashboard/account-settings': typeof SellerDashboardAccountSettingsRoute
  '/seller/dashboard/business-information': typeof SellerDashboardBusinessInformationRoute
  '/seller/dashboard/update-password': typeof SellerDashboardUpdatePasswordRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/profile': typeof AdminProfileIndexRoute
  '/customer/profile': typeof CustomerProfileIndexRoute
  '/seller/dashboard': typeof SellerDashboardIndexRoute
  '/seller/profile': typeof SellerProfileIndexRoute
  '/admin/dashboard/admins/create': typeof AdminDashboardAdminsCreateRoute
  '/admin/dashboard/categories/create': typeof AdminDashboardCategoriesCreateRoute
  '/admin/dashboard/sellers/$id': typeof AdminDashboardSellersIdRoute
  '/auth/verify/$code': typeof AuthcustomerVerifyCodeRoute
  '/auth/seller/verify/$code': typeof AuthSellerVerifyCodeRoute
  '/seller/dashboard/products/$id': typeof SellerDashboardProductsIdRoute
  '/seller/dashboard/products/create': typeof SellerDashboardProductsCreateRoute
  '/admin/dashboard/admins': typeof AdminDashboardAdminsIndexRoute
  '/admin/dashboard/categories': typeof AdminDashboardCategoriesIndexRoute
  '/admin/dashboard/customers': typeof AdminDashboardCustomersIndexRoute
  '/admin/dashboard/sellers': typeof AdminDashboardSellersIndexRoute
  '/seller/dashboard/products': typeof SellerDashboardProductsIndexRoute
  '/admin/dashboard/admins/$id': typeof AdminDashboardAdminseditIdRoute
  '/admin/dashboard/categories/$id': typeof AdminDashboardCategorieseditIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/customer': typeof CustomerRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/customer/update-password': typeof CustomerUpdatePasswordRoute
  '/admin/dashboard/account-settings': typeof AdminDashboardAccountSettingsRoute
  '/admin/dashboard/update-password': typeof AdminDashboardUpdatePasswordRoute
  '/auth/login': typeof AuthcustomerLoginRoute
  '/auth/register': typeof AuthcustomerRegisterRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/seller/login': typeof AuthSellerLoginRoute
  '/auth/seller/register': typeof AuthSellerRegisterRoute
  '/customer/profile/update': typeof CustomerProfileUpdateRoute
  '/seller/dashboard/account-settings': typeof SellerDashboardAccountSettingsRoute
  '/seller/dashboard/business-information': typeof SellerDashboardBusinessInformationRoute
  '/seller/dashboard/update-password': typeof SellerDashboardUpdatePasswordRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/profile': typeof AdminProfileIndexRoute
  '/customer/profile': typeof CustomerProfileIndexRoute
  '/seller/dashboard': typeof SellerDashboardIndexRoute
  '/seller/profile': typeof SellerProfileIndexRoute
  '/admin/dashboard/admins/create': typeof AdminDashboardAdminsCreateRoute
  '/admin/dashboard/categories/create': typeof AdminDashboardCategoriesCreateRoute
  '/admin/dashboard/sellers/$id': typeof AdminDashboardSellersIdRoute
  '/auth/verify/$code': typeof AuthcustomerVerifyCodeRoute
  '/auth/seller/verify/$code': typeof AuthSellerVerifyCodeRoute
  '/seller/dashboard/products/$id': typeof SellerDashboardProductsIdRoute
  '/seller/dashboard/products/create': typeof SellerDashboardProductsCreateRoute
  '/admin/dashboard/admins': typeof AdminDashboardAdminsIndexRoute
  '/admin/dashboard/categories': typeof AdminDashboardCategoriesIndexRoute
  '/admin/dashboard/customers': typeof AdminDashboardCustomersIndexRoute
  '/admin/dashboard/sellers': typeof AdminDashboardSellersIndexRoute
  '/seller/dashboard/products': typeof SellerDashboardProductsIndexRoute
  '/admin/dashboard/admins/$id': typeof AdminDashboardAdminseditIdRoute
  '/admin/dashboard/categories/$id': typeof AdminDashboardCategorieseditIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/customer': typeof CustomerRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/customer/update-password': typeof CustomerUpdatePasswordRoute
  '/admin/dashboard/account-settings': typeof AdminDashboardAccountSettingsRoute
  '/admin/dashboard/update-password': typeof AdminDashboardUpdatePasswordRoute
  '/auth/(customer)/login': typeof AuthcustomerLoginRoute
  '/auth/(customer)/register': typeof AuthcustomerRegisterRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/seller/login': typeof AuthSellerLoginRoute
  '/auth/seller/register': typeof AuthSellerRegisterRoute
  '/customer/profile/update': typeof CustomerProfileUpdateRoute
  '/seller/dashboard/account-settings': typeof SellerDashboardAccountSettingsRoute
  '/seller/dashboard/business-information': typeof SellerDashboardBusinessInformationRoute
  '/seller/dashboard/update-password': typeof SellerDashboardUpdatePasswordRoute
  '/admin/dashboard/': typeof AdminDashboardIndexRoute
  '/admin/profile/': typeof AdminProfileIndexRoute
  '/customer/profile/': typeof CustomerProfileIndexRoute
  '/seller/dashboard/': typeof SellerDashboardIndexRoute
  '/seller/profile/': typeof SellerProfileIndexRoute
  '/admin/dashboard/admins/create': typeof AdminDashboardAdminsCreateRoute
  '/admin/dashboard/categories/create': typeof AdminDashboardCategoriesCreateRoute
  '/admin/dashboard/sellers/$id': typeof AdminDashboardSellersIdRoute
  '/auth/(customer)/verify/$code': typeof AuthcustomerVerifyCodeRoute
  '/auth/seller/verify/$code': typeof AuthSellerVerifyCodeRoute
  '/seller/dashboard/products/$id': typeof SellerDashboardProductsIdRoute
  '/seller/dashboard/products/create': typeof SellerDashboardProductsCreateRoute
  '/admin/dashboard/admins/': typeof AdminDashboardAdminsIndexRoute
  '/admin/dashboard/categories/': typeof AdminDashboardCategoriesIndexRoute
  '/admin/dashboard/customers/': typeof AdminDashboardCustomersIndexRoute
  '/admin/dashboard/sellers/': typeof AdminDashboardSellersIndexRoute
  '/seller/dashboard/products/': typeof SellerDashboardProductsIndexRoute
  '/admin/dashboard/admins/(edit)/$id': typeof AdminDashboardAdminseditIdRoute
  '/admin/dashboard/categories/(edit)/$id': typeof AdminDashboardCategorieseditIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/customer'
    | '/seller'
    | '/customer/update-password'
    | '/admin/dashboard/account-settings'
    | '/admin/dashboard/update-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/admin/login'
    | '/auth/seller/login'
    | '/auth/seller/register'
    | '/customer/profile/update'
    | '/seller/dashboard/account-settings'
    | '/seller/dashboard/business-information'
    | '/seller/dashboard/update-password'
    | '/admin/dashboard'
    | '/admin/profile'
    | '/customer/profile'
    | '/seller/dashboard'
    | '/seller/profile'
    | '/admin/dashboard/admins/create'
    | '/admin/dashboard/categories/create'
    | '/admin/dashboard/sellers/$id'
    | '/auth/verify/$code'
    | '/auth/seller/verify/$code'
    | '/seller/dashboard/products/$id'
    | '/seller/dashboard/products/create'
    | '/admin/dashboard/admins'
    | '/admin/dashboard/categories'
    | '/admin/dashboard/customers'
    | '/admin/dashboard/sellers'
    | '/seller/dashboard/products'
    | '/admin/dashboard/admins/$id'
    | '/admin/dashboard/categories/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/auth'
    | '/customer'
    | '/seller'
    | '/customer/update-password'
    | '/admin/dashboard/account-settings'
    | '/admin/dashboard/update-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/admin/login'
    | '/auth/seller/login'
    | '/auth/seller/register'
    | '/customer/profile/update'
    | '/seller/dashboard/account-settings'
    | '/seller/dashboard/business-information'
    | '/seller/dashboard/update-password'
    | '/admin/dashboard'
    | '/admin/profile'
    | '/customer/profile'
    | '/seller/dashboard'
    | '/seller/profile'
    | '/admin/dashboard/admins/create'
    | '/admin/dashboard/categories/create'
    | '/admin/dashboard/sellers/$id'
    | '/auth/verify/$code'
    | '/auth/seller/verify/$code'
    | '/seller/dashboard/products/$id'
    | '/seller/dashboard/products/create'
    | '/admin/dashboard/admins'
    | '/admin/dashboard/categories'
    | '/admin/dashboard/customers'
    | '/admin/dashboard/sellers'
    | '/seller/dashboard/products'
    | '/admin/dashboard/admins/$id'
    | '/admin/dashboard/categories/$id'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/auth'
    | '/customer'
    | '/seller'
    | '/customer/update-password'
    | '/admin/dashboard/account-settings'
    | '/admin/dashboard/update-password'
    | '/auth/(customer)/login'
    | '/auth/(customer)/register'
    | '/auth/admin/login'
    | '/auth/seller/login'
    | '/auth/seller/register'
    | '/customer/profile/update'
    | '/seller/dashboard/account-settings'
    | '/seller/dashboard/business-information'
    | '/seller/dashboard/update-password'
    | '/admin/dashboard/'
    | '/admin/profile/'
    | '/customer/profile/'
    | '/seller/dashboard/'
    | '/seller/profile/'
    | '/admin/dashboard/admins/create'
    | '/admin/dashboard/categories/create'
    | '/admin/dashboard/sellers/$id'
    | '/auth/(customer)/verify/$code'
    | '/auth/seller/verify/$code'
    | '/seller/dashboard/products/$id'
    | '/seller/dashboard/products/create'
    | '/admin/dashboard/admins/'
    | '/admin/dashboard/categories/'
    | '/admin/dashboard/customers/'
    | '/admin/dashboard/sellers/'
    | '/seller/dashboard/products/'
    | '/admin/dashboard/admins/(edit)/$id'
    | '/admin/dashboard/categories/(edit)/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  CustomerRouteRoute: typeof CustomerRouteRouteWithChildren
  SellerRouteRoute: typeof SellerRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  CustomerRouteRoute: CustomerRouteRouteWithChildren,
  SellerRouteRoute: SellerRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/auth",
        "/customer",
        "/seller"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/dashboard/account-settings",
        "/admin/dashboard/update-password",
        "/admin/dashboard/",
        "/admin/profile/",
        "/admin/dashboard/admins/create",
        "/admin/dashboard/categories/create",
        "/admin/dashboard/sellers/$id",
        "/admin/dashboard/admins/",
        "/admin/dashboard/categories/",
        "/admin/dashboard/customers/",
        "/admin/dashboard/sellers/",
        "/admin/dashboard/admins/(edit)/$id",
        "/admin/dashboard/categories/(edit)/$id"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/(customer)/login",
        "/auth/(customer)/register",
        "/auth/admin/login",
        "/auth/seller/login",
        "/auth/seller/register",
        "/auth/(customer)/verify/$code",
        "/auth/seller/verify/$code"
      ]
    },
    "/customer": {
      "filePath": "customer/route.tsx",
      "children": [
        "/customer/update-password",
        "/customer/profile/update",
        "/customer/profile/"
      ]
    },
    "/seller": {
      "filePath": "seller/route.tsx",
      "children": [
        "/seller/dashboard/account-settings",
        "/seller/dashboard/business-information",
        "/seller/dashboard/update-password",
        "/seller/dashboard/",
        "/seller/profile/",
        "/seller/dashboard/products/$id",
        "/seller/dashboard/products/create",
        "/seller/dashboard/products/"
      ]
    },
    "/customer/update-password": {
      "filePath": "customer/update-password.tsx",
      "parent": "/customer"
    },
    "/admin/dashboard/account-settings": {
      "filePath": "admin/dashboard/account-settings.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/update-password": {
      "filePath": "admin/dashboard/update-password.tsx",
      "parent": "/admin"
    },
    "/auth/(customer)/login": {
      "filePath": "auth/(customer)/login.tsx",
      "parent": "/auth"
    },
    "/auth/(customer)/register": {
      "filePath": "auth/(customer)/register.tsx",
      "parent": "/auth"
    },
    "/auth/admin/login": {
      "filePath": "auth/admin/login.tsx",
      "parent": "/auth"
    },
    "/auth/seller/login": {
      "filePath": "auth/seller/login.tsx",
      "parent": "/auth"
    },
    "/auth/seller/register": {
      "filePath": "auth/seller/register.tsx",
      "parent": "/auth"
    },
    "/customer/profile/update": {
      "filePath": "customer/profile/update.tsx",
      "parent": "/customer"
    },
    "/seller/dashboard/account-settings": {
      "filePath": "seller/dashboard/account-settings.tsx",
      "parent": "/seller"
    },
    "/seller/dashboard/business-information": {
      "filePath": "seller/dashboard/business-information.tsx",
      "parent": "/seller"
    },
    "/seller/dashboard/update-password": {
      "filePath": "seller/dashboard/update-password.tsx",
      "parent": "/seller"
    },
    "/admin/dashboard/": {
      "filePath": "admin/dashboard/index.tsx",
      "parent": "/admin"
    },
    "/admin/profile/": {
      "filePath": "admin/profile/index.tsx",
      "parent": "/admin"
    },
    "/customer/profile/": {
      "filePath": "customer/profile/index.tsx",
      "parent": "/customer"
    },
    "/seller/dashboard/": {
      "filePath": "seller/dashboard/index.tsx",
      "parent": "/seller"
    },
    "/seller/profile/": {
      "filePath": "seller/profile/index.tsx",
      "parent": "/seller"
    },
    "/admin/dashboard/admins/create": {
      "filePath": "admin/dashboard/admins/create.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/categories/create": {
      "filePath": "admin/dashboard/categories/create.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/sellers/$id": {
      "filePath": "admin/dashboard/sellers/$id.tsx",
      "parent": "/admin"
    },
    "/auth/(customer)/verify/$code": {
      "filePath": "auth/(customer)/verify/$code.tsx",
      "parent": "/auth"
    },
    "/auth/seller/verify/$code": {
      "filePath": "auth/seller/verify/$code.tsx",
      "parent": "/auth"
    },
    "/seller/dashboard/products/$id": {
      "filePath": "seller/dashboard/products/$id.tsx",
      "parent": "/seller"
    },
    "/seller/dashboard/products/create": {
      "filePath": "seller/dashboard/products/create.tsx",
      "parent": "/seller"
    },
    "/admin/dashboard/admins/": {
      "filePath": "admin/dashboard/admins/index.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/categories/": {
      "filePath": "admin/dashboard/categories/index.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/customers/": {
      "filePath": "admin/dashboard/customers/index.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/sellers/": {
      "filePath": "admin/dashboard/sellers/index.tsx",
      "parent": "/admin"
    },
    "/seller/dashboard/products/": {
      "filePath": "seller/dashboard/products/index.tsx",
      "parent": "/seller"
    },
    "/admin/dashboard/admins/(edit)/$id": {
      "filePath": "admin/dashboard/admins/(edit)/$id.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/categories/(edit)/$id": {
      "filePath": "admin/dashboard/categories/(edit)/$id.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SellerRouteImport } from './routes/seller/route'
import { Route as CustomerRouteImport } from './routes/customer/route'
import { Route as CartRouteImport } from './routes/cart/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as CheckoutIndexImport } from './routes/checkout/index'
import { Route as CartIndexImport } from './routes/cart/index'
import { Route as ProductIdImport } from './routes/product/$id'
import { Route as PaymentSuccessImport } from './routes/payment/success'
import { Route as CustomerUpdatePasswordImport } from './routes/customer/update-password'
import { Route as ProductAllRouteImport } from './routes/product/all/route'
import { Route as CustomerOrderRouteImport } from './routes/customer/order/route'
import { Route as SellerProfileIndexImport } from './routes/seller/profile/index'
import { Route as SellerDashboardIndexImport } from './routes/seller/dashboard/index'
import { Route as ProductAllIndexImport } from './routes/product/all/index'
import { Route as CustomerProfileIndexImport } from './routes/customer/profile/index'
import { Route as CustomerOrderIndexImport } from './routes/customer/order/index'
import { Route as CustomerAddressIndexImport } from './routes/customer/address/index'
import { Route as AdminProfileIndexImport } from './routes/admin/profile/index'
import { Route as AdminDashboardIndexImport } from './routes/admin/dashboard/index'
import { Route as SellerDashboardUpdatePasswordImport } from './routes/seller/dashboard/update-password'
import { Route as SellerDashboardBusinessInformationImport } from './routes/seller/dashboard/business-information'
import { Route as SellerDashboardAccountSettingsImport } from './routes/seller/dashboard/account-settings'
import { Route as ProductAllNewArrivalImport } from './routes/product/all/new-arrival'
import { Route as ProductAllFeatureProductImport } from './routes/product/all/feature-product'
import { Route as ProductAllBestSellImport } from './routes/product/all/best-sell'
import { Route as CustomerProfileUpdateImport } from './routes/customer/profile/update'
import { Route as CustomerOrderProcessingImport } from './routes/customer/order/processing'
import { Route as CustomerOrderCompletedImport } from './routes/customer/order/completed'
import { Route as CustomerAddressCreateImport } from './routes/customer/address/create'
import { Route as CustomerAddressIdImport } from './routes/customer/address/$id'
import { Route as AuthSellerRegisterImport } from './routes/auth/seller/register'
import { Route as AuthSellerLoginImport } from './routes/auth/seller/login'
import { Route as AuthAdminLoginImport } from './routes/auth/admin/login'
import { Route as AuthcustomerRegisterImport } from './routes/auth/(customer)/register'
import { Route as AuthcustomerLoginImport } from './routes/auth/(customer)/login'
import { Route as AdminDashboardUpdatePasswordImport } from './routes/admin/dashboard/update-password'
import { Route as AdminDashboardAccountSettingsImport } from './routes/admin/dashboard/account-settings'
import { Route as SellerDashboardOrdersRouteImport } from './routes/seller/dashboard/orders/route'
import { Route as AdminDashboardOrdersRouteImport } from './routes/admin/dashboard/orders/route'
import { Route as AdminDashboardOrderItemsRouteImport } from './routes/admin/dashboard/order-items/route'
import { Route as SellerDashboardProductsIndexImport } from './routes/seller/dashboard/products/index'
import { Route as SellerDashboardOrdersIndexImport } from './routes/seller/dashboard/orders/index'
import { Route as AdminDashboardSellersIndexImport } from './routes/admin/dashboard/sellers/index'
import { Route as AdminDashboardProductsIndexImport } from './routes/admin/dashboard/products/index'
import { Route as AdminDashboardOrdersIndexImport } from './routes/admin/dashboard/orders/index'
import { Route as AdminDashboardOrderItemsIndexImport } from './routes/admin/dashboard/order-items/index'
import { Route as AdminDashboardCustomersIndexImport } from './routes/admin/dashboard/customers/index'
import { Route as AdminDashboardCategoriesIndexImport } from './routes/admin/dashboard/categories/index'
import { Route as AdminDashboardAdminsIndexImport } from './routes/admin/dashboard/admins/index'
import { Route as AuthSellerVerifyCodeImport } from './routes/auth/seller/verify/$code'
import { Route as AuthcustomerVerifyCodeImport } from './routes/auth/(customer)/verify/$code'
import { Route as AdminDashboardSellersIdImport } from './routes/admin/dashboard/sellers/$id'
import { Route as AdminDashboardProductsIdImport } from './routes/admin/dashboard/products/$id'
import { Route as AdminDashboardCategoriesCreateImport } from './routes/admin/dashboard/categories/create'
import { Route as AdminDashboardAdminsCreateImport } from './routes/admin/dashboard/admins/create'
import { Route as SellerDashboardProductsproductCreateImport } from './routes/seller/dashboard/products/(product)/create'
import { Route as SellerDashboardOrdersordersToshipImport } from './routes/seller/dashboard/orders/(orders)/toship'
import { Route as SellerDashboardOrdersordersShippingImport } from './routes/seller/dashboard/orders/(orders)/shipping'
import { Route as SellerDashboardOrdersordersReturnRequestImport } from './routes/seller/dashboard/orders/(orders)/return-request'
import { Route as SellerDashboardOrdersordersFailDeliveryImport } from './routes/seller/dashboard/orders/(orders)/fail-delivery'
import { Route as SellerDashboardOrdersordersDeliveredImport } from './routes/seller/dashboard/orders/(orders)/delivered'
import { Route as SellerDashboardOrdersordersCancelImport } from './routes/seller/dashboard/orders/(orders)/cancel'
import { Route as SellerDashboardOrdersordersAllImport } from './routes/seller/dashboard/orders/(orders)/all'
import { Route as AdminDashboardOrdersordersAllImport } from './routes/admin/dashboard/orders/(orders)/all'
import { Route as AdminDashboardOrderItemsorderItemsShippingImport } from './routes/admin/dashboard/order-items/(order-items)/shipping'
import { Route as AdminDashboardOrderItemsorderItemsFailDeliveryImport } from './routes/admin/dashboard/order-items/(order-items)/fail-delivery'
import { Route as AdminDashboardOrderItemsorderItemsDeliveredImport } from './routes/admin/dashboard/order-items/(order-items)/delivered'
import { Route as AdminDashboardOrderItemsorderItemsAllImport } from './routes/admin/dashboard/order-items/(order-items)/all'
import { Route as AdminDashboardCategorieseditIdImport } from './routes/admin/dashboard/categories/(edit)/$id'
import { Route as AdminDashboardAdminseditIdImport } from './routes/admin/dashboard/admins/(edit)/$id'
import { Route as SellerDashboardProductsproductIdIndexImport } from './routes/seller/dashboard/products/(product)/$id/index'
import { Route as SellerDashboardProductsproductIdEditImport } from './routes/seller/dashboard/products/(product)/$id_/edit'
import { Route as AdminDashboardOrderItemsorderItemsItemsIdImport } from './routes/admin/dashboard/order-items/(order-items)/items/$id'
import { Route as SellerDashboardOrdersordersItemsIdIndexImport } from './routes/seller/dashboard/orders/(orders)/items/$id/index'
import { Route as SellerDashboardProductsproductIdVariantsVariantIdImport } from './routes/seller/dashboard/products/(product)/$id/variants/$variantId'

// Create/Update Routes

const SellerRouteRoute = SellerRouteImport.update({
  id: '/seller',
  path: '/seller',
  getParentRoute: () => rootRoute,
} as any)

const CustomerRouteRoute = CustomerRouteImport.update({
  id: '/customer',
  path: '/customer',
  getParentRoute: () => rootRoute,
} as any)

const CartRouteRoute = CartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutIndexRoute = CheckoutIndexImport.update({
  id: '/checkout/',
  path: '/checkout/',
  getParentRoute: () => rootRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CartRouteRoute,
} as any)

const ProductIdRoute = ProductIdImport.update({
  id: '/product/$id',
  path: '/product/$id',
  getParentRoute: () => rootRoute,
} as any)

const PaymentSuccessRoute = PaymentSuccessImport.update({
  id: '/payment/success',
  path: '/payment/success',
  getParentRoute: () => rootRoute,
} as any)

const CustomerUpdatePasswordRoute = CustomerUpdatePasswordImport.update({
  id: '/update-password',
  path: '/update-password',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const ProductAllRouteRoute = ProductAllRouteImport.update({
  id: '/product/all',
  path: '/product/all',
  getParentRoute: () => rootRoute,
} as any)

const CustomerOrderRouteRoute = CustomerOrderRouteImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const SellerProfileIndexRoute = SellerProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const SellerDashboardIndexRoute = SellerDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => SellerRouteRoute,
} as any)

const ProductAllIndexRoute = ProductAllIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProductAllRouteRoute,
} as any)

const CustomerProfileIndexRoute = CustomerProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const CustomerOrderIndexRoute = CustomerOrderIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CustomerOrderRouteRoute,
} as any)

const CustomerAddressIndexRoute = CustomerAddressIndexImport.update({
  id: '/address/',
  path: '/address/',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const AdminProfileIndexRoute = AdminProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const SellerDashboardUpdatePasswordRoute =
  SellerDashboardUpdatePasswordImport.update({
    id: '/dashboard/update-password',
    path: '/dashboard/update-password',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerDashboardBusinessInformationRoute =
  SellerDashboardBusinessInformationImport.update({
    id: '/dashboard/business-information',
    path: '/dashboard/business-information',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerDashboardAccountSettingsRoute =
  SellerDashboardAccountSettingsImport.update({
    id: '/dashboard/account-settings',
    path: '/dashboard/account-settings',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const ProductAllNewArrivalRoute = ProductAllNewArrivalImport.update({
  id: '/new-arrival',
  path: '/new-arrival',
  getParentRoute: () => ProductAllRouteRoute,
} as any)

const ProductAllFeatureProductRoute = ProductAllFeatureProductImport.update({
  id: '/feature-product',
  path: '/feature-product',
  getParentRoute: () => ProductAllRouteRoute,
} as any)

const ProductAllBestSellRoute = ProductAllBestSellImport.update({
  id: '/best-sell',
  path: '/best-sell',
  getParentRoute: () => ProductAllRouteRoute,
} as any)

const CustomerProfileUpdateRoute = CustomerProfileUpdateImport.update({
  id: '/profile/update',
  path: '/profile/update',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const CustomerOrderProcessingRoute = CustomerOrderProcessingImport.update({
  id: '/processing',
  path: '/processing',
  getParentRoute: () => CustomerOrderRouteRoute,
} as any)

const CustomerOrderCompletedRoute = CustomerOrderCompletedImport.update({
  id: '/completed',
  path: '/completed',
  getParentRoute: () => CustomerOrderRouteRoute,
} as any)

const CustomerAddressCreateRoute = CustomerAddressCreateImport.update({
  id: '/address/create',
  path: '/address/create',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const CustomerAddressIdRoute = CustomerAddressIdImport.update({
  id: '/address/$id',
  path: '/address/$id',
  getParentRoute: () => CustomerRouteRoute,
} as any)

const AuthSellerRegisterRoute = AuthSellerRegisterImport.update({
  id: '/seller/register',
  path: '/seller/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSellerLoginRoute = AuthSellerLoginImport.update({
  id: '/seller/login',
  path: '/seller/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthAdminLoginRoute = AuthAdminLoginImport.update({
  id: '/admin/login',
  path: '/admin/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthcustomerRegisterRoute = AuthcustomerRegisterImport.update({
  id: '/(customer)/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthcustomerLoginRoute = AuthcustomerLoginImport.update({
  id: '/(customer)/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AdminDashboardUpdatePasswordRoute =
  AdminDashboardUpdatePasswordImport.update({
    id: '/dashboard/update-password',
    path: '/dashboard/update-password',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardAccountSettingsRoute =
  AdminDashboardAccountSettingsImport.update({
    id: '/dashboard/account-settings',
    path: '/dashboard/account-settings',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const SellerDashboardOrdersRouteRoute = SellerDashboardOrdersRouteImport.update(
  {
    id: '/dashboard/orders',
    path: '/dashboard/orders',
    getParentRoute: () => SellerRouteRoute,
  } as any,
)

const AdminDashboardOrdersRouteRoute = AdminDashboardOrdersRouteImport.update({
  id: '/dashboard/orders',
  path: '/dashboard/orders',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardOrderItemsRouteRoute =
  AdminDashboardOrderItemsRouteImport.update({
    id: '/dashboard/order-items',
    path: '/dashboard/order-items',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const SellerDashboardProductsIndexRoute =
  SellerDashboardProductsIndexImport.update({
    id: '/dashboard/products/',
    path: '/dashboard/products/',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerDashboardOrdersIndexRoute = SellerDashboardOrdersIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any,
)

const AdminDashboardSellersIndexRoute = AdminDashboardSellersIndexImport.update(
  {
    id: '/dashboard/sellers/',
    path: '/dashboard/sellers/',
    getParentRoute: () => AdminRouteRoute,
  } as any,
)

const AdminDashboardProductsIndexRoute =
  AdminDashboardProductsIndexImport.update({
    id: '/dashboard/products/',
    path: '/dashboard/products/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardOrdersIndexRoute = AdminDashboardOrdersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminDashboardOrdersRouteRoute,
} as any)

const AdminDashboardOrderItemsIndexRoute =
  AdminDashboardOrderItemsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminDashboardOrderItemsRouteRoute,
  } as any)

const AdminDashboardCustomersIndexRoute =
  AdminDashboardCustomersIndexImport.update({
    id: '/dashboard/customers/',
    path: '/dashboard/customers/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardCategoriesIndexRoute =
  AdminDashboardCategoriesIndexImport.update({
    id: '/dashboard/categories/',
    path: '/dashboard/categories/',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardAdminsIndexRoute = AdminDashboardAdminsIndexImport.update({
  id: '/dashboard/admins/',
  path: '/dashboard/admins/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AuthSellerVerifyCodeRoute = AuthSellerVerifyCodeImport.update({
  id: '/seller/verify/$code',
  path: '/seller/verify/$code',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthcustomerVerifyCodeRoute = AuthcustomerVerifyCodeImport.update({
  id: '/(customer)/verify/$code',
  path: '/verify/$code',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AdminDashboardSellersIdRoute = AdminDashboardSellersIdImport.update({
  id: '/dashboard/sellers/$id',
  path: '/dashboard/sellers/$id',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardProductsIdRoute = AdminDashboardProductsIdImport.update({
  id: '/dashboard/products/$id',
  path: '/dashboard/products/$id',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardCategoriesCreateRoute =
  AdminDashboardCategoriesCreateImport.update({
    id: '/dashboard/categories/create',
    path: '/dashboard/categories/create',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardAdminsCreateRoute = AdminDashboardAdminsCreateImport.update(
  {
    id: '/dashboard/admins/create',
    path: '/dashboard/admins/create',
    getParentRoute: () => AdminRouteRoute,
  } as any,
)

const SellerDashboardProductsproductCreateRoute =
  SellerDashboardProductsproductCreateImport.update({
    id: '/dashboard/products/(product)/create',
    path: '/dashboard/products/create',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerDashboardOrdersordersToshipRoute =
  SellerDashboardOrdersordersToshipImport.update({
    id: '/(orders)/toship',
    path: '/toship',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any)

const SellerDashboardOrdersordersShippingRoute =
  SellerDashboardOrdersordersShippingImport.update({
    id: '/(orders)/shipping',
    path: '/shipping',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any)

const SellerDashboardOrdersordersReturnRequestRoute =
  SellerDashboardOrdersordersReturnRequestImport.update({
    id: '/(orders)/return-request',
    path: '/return-request',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any)

const SellerDashboardOrdersordersFailDeliveryRoute =
  SellerDashboardOrdersordersFailDeliveryImport.update({
    id: '/(orders)/fail-delivery',
    path: '/fail-delivery',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any)

const SellerDashboardOrdersordersDeliveredRoute =
  SellerDashboardOrdersordersDeliveredImport.update({
    id: '/(orders)/delivered',
    path: '/delivered',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any)

const SellerDashboardOrdersordersCancelRoute =
  SellerDashboardOrdersordersCancelImport.update({
    id: '/(orders)/cancel',
    path: '/cancel',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any)

const SellerDashboardOrdersordersAllRoute =
  SellerDashboardOrdersordersAllImport.update({
    id: '/(orders)/all',
    path: '/all',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any)

const AdminDashboardOrdersordersAllRoute =
  AdminDashboardOrdersordersAllImport.update({
    id: '/(orders)/all',
    path: '/all',
    getParentRoute: () => AdminDashboardOrdersRouteRoute,
  } as any)

const AdminDashboardOrderItemsorderItemsShippingRoute =
  AdminDashboardOrderItemsorderItemsShippingImport.update({
    id: '/(order-items)/shipping',
    path: '/shipping',
    getParentRoute: () => AdminDashboardOrderItemsRouteRoute,
  } as any)

const AdminDashboardOrderItemsorderItemsFailDeliveryRoute =
  AdminDashboardOrderItemsorderItemsFailDeliveryImport.update({
    id: '/(order-items)/fail-delivery',
    path: '/fail-delivery',
    getParentRoute: () => AdminDashboardOrderItemsRouteRoute,
  } as any)

const AdminDashboardOrderItemsorderItemsDeliveredRoute =
  AdminDashboardOrderItemsorderItemsDeliveredImport.update({
    id: '/(order-items)/delivered',
    path: '/delivered',
    getParentRoute: () => AdminDashboardOrderItemsRouteRoute,
  } as any)

const AdminDashboardOrderItemsorderItemsAllRoute =
  AdminDashboardOrderItemsorderItemsAllImport.update({
    id: '/(order-items)/all',
    path: '/all',
    getParentRoute: () => AdminDashboardOrderItemsRouteRoute,
  } as any)

const AdminDashboardCategorieseditIdRoute =
  AdminDashboardCategorieseditIdImport.update({
    id: '/dashboard/categories/(edit)/$id',
    path: '/dashboard/categories/$id',
    getParentRoute: () => AdminRouteRoute,
  } as any)

const AdminDashboardAdminseditIdRoute = AdminDashboardAdminseditIdImport.update(
  {
    id: '/dashboard/admins/(edit)/$id',
    path: '/dashboard/admins/$id',
    getParentRoute: () => AdminRouteRoute,
  } as any,
)

const SellerDashboardProductsproductIdIndexRoute =
  SellerDashboardProductsproductIdIndexImport.update({
    id: '/dashboard/products/(product)/$id/',
    path: '/dashboard/products/$id/',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const SellerDashboardProductsproductIdEditRoute =
  SellerDashboardProductsproductIdEditImport.update({
    id: '/dashboard/products/(product)/$id_/edit',
    path: '/dashboard/products/$id/edit',
    getParentRoute: () => SellerRouteRoute,
  } as any)

const AdminDashboardOrderItemsorderItemsItemsIdRoute =
  AdminDashboardOrderItemsorderItemsItemsIdImport.update({
    id: '/(order-items)/items/$id',
    path: '/items/$id',
    getParentRoute: () => AdminDashboardOrderItemsRouteRoute,
  } as any)

const SellerDashboardOrdersordersItemsIdIndexRoute =
  SellerDashboardOrdersordersItemsIdIndexImport.update({
    id: '/(orders)/items/$id/',
    path: '/items/$id/',
    getParentRoute: () => SellerDashboardOrdersRouteRoute,
  } as any)

const SellerDashboardProductsproductIdVariantsVariantIdRoute =
  SellerDashboardProductsproductIdVariantsVariantIdImport.update({
    id: '/dashboard/products/(product)/$id/variants/$variantId',
    path: '/dashboard/products/$id/variants/$variantId',
    getParentRoute: () => SellerRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartRouteImport
      parentRoute: typeof rootRoute
    }
    '/customer': {
      id: '/customer'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof CustomerRouteImport
      parentRoute: typeof rootRoute
    }
    '/seller': {
      id: '/seller'
      path: '/seller'
      fullPath: '/seller'
      preLoaderRoute: typeof SellerRouteImport
      parentRoute: typeof rootRoute
    }
    '/customer/order': {
      id: '/customer/order'
      path: '/order'
      fullPath: '/customer/order'
      preLoaderRoute: typeof CustomerOrderRouteImport
      parentRoute: typeof CustomerRouteImport
    }
    '/product/all': {
      id: '/product/all'
      path: '/product/all'
      fullPath: '/product/all'
      preLoaderRoute: typeof ProductAllRouteImport
      parentRoute: typeof rootRoute
    }
    '/customer/update-password': {
      id: '/customer/update-password'
      path: '/update-password'
      fullPath: '/customer/update-password'
      preLoaderRoute: typeof CustomerUpdatePasswordImport
      parentRoute: typeof CustomerRouteImport
    }
    '/payment/success': {
      id: '/payment/success'
      path: '/payment/success'
      fullPath: '/payment/success'
      preLoaderRoute: typeof PaymentSuccessImport
      parentRoute: typeof rootRoute
    }
    '/product/$id': {
      id: '/product/$id'
      path: '/product/$id'
      fullPath: '/product/$id'
      preLoaderRoute: typeof ProductIdImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      id: '/cart/'
      path: '/'
      fullPath: '/cart/'
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof CartRouteImport
    }
    '/checkout/': {
      id: '/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard/order-items': {
      id: '/admin/dashboard/order-items'
      path: '/dashboard/order-items'
      fullPath: '/admin/dashboard/order-items'
      preLoaderRoute: typeof AdminDashboardOrderItemsRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/orders': {
      id: '/admin/dashboard/orders'
      path: '/dashboard/orders'
      fullPath: '/admin/dashboard/orders'
      preLoaderRoute: typeof AdminDashboardOrdersRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/seller/dashboard/orders': {
      id: '/seller/dashboard/orders'
      path: '/dashboard/orders'
      fullPath: '/seller/dashboard/orders'
      preLoaderRoute: typeof SellerDashboardOrdersRouteImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/account-settings': {
      id: '/admin/dashboard/account-settings'
      path: '/dashboard/account-settings'
      fullPath: '/admin/dashboard/account-settings'
      preLoaderRoute: typeof AdminDashboardAccountSettingsImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/update-password': {
      id: '/admin/dashboard/update-password'
      path: '/dashboard/update-password'
      fullPath: '/admin/dashboard/update-password'
      preLoaderRoute: typeof AdminDashboardUpdatePasswordImport
      parentRoute: typeof AdminRouteImport
    }
    '/auth/(customer)/login': {
      id: '/auth/(customer)/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthcustomerLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/(customer)/register': {
      id: '/auth/(customer)/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthcustomerRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/admin/login': {
      id: '/auth/admin/login'
      path: '/admin/login'
      fullPath: '/auth/admin/login'
      preLoaderRoute: typeof AuthAdminLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/seller/login': {
      id: '/auth/seller/login'
      path: '/seller/login'
      fullPath: '/auth/seller/login'
      preLoaderRoute: typeof AuthSellerLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/seller/register': {
      id: '/auth/seller/register'
      path: '/seller/register'
      fullPath: '/auth/seller/register'
      preLoaderRoute: typeof AuthSellerRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/customer/address/$id': {
      id: '/customer/address/$id'
      path: '/address/$id'
      fullPath: '/customer/address/$id'
      preLoaderRoute: typeof CustomerAddressIdImport
      parentRoute: typeof CustomerRouteImport
    }
    '/customer/address/create': {
      id: '/customer/address/create'
      path: '/address/create'
      fullPath: '/customer/address/create'
      preLoaderRoute: typeof CustomerAddressCreateImport
      parentRoute: typeof CustomerRouteImport
    }
    '/customer/order/completed': {
      id: '/customer/order/completed'
      path: '/completed'
      fullPath: '/customer/order/completed'
      preLoaderRoute: typeof CustomerOrderCompletedImport
      parentRoute: typeof CustomerOrderRouteImport
    }
    '/customer/order/processing': {
      id: '/customer/order/processing'
      path: '/processing'
      fullPath: '/customer/order/processing'
      preLoaderRoute: typeof CustomerOrderProcessingImport
      parentRoute: typeof CustomerOrderRouteImport
    }
    '/customer/profile/update': {
      id: '/customer/profile/update'
      path: '/profile/update'
      fullPath: '/customer/profile/update'
      preLoaderRoute: typeof CustomerProfileUpdateImport
      parentRoute: typeof CustomerRouteImport
    }
    '/product/all/best-sell': {
      id: '/product/all/best-sell'
      path: '/best-sell'
      fullPath: '/product/all/best-sell'
      preLoaderRoute: typeof ProductAllBestSellImport
      parentRoute: typeof ProductAllRouteImport
    }
    '/product/all/feature-product': {
      id: '/product/all/feature-product'
      path: '/feature-product'
      fullPath: '/product/all/feature-product'
      preLoaderRoute: typeof ProductAllFeatureProductImport
      parentRoute: typeof ProductAllRouteImport
    }
    '/product/all/new-arrival': {
      id: '/product/all/new-arrival'
      path: '/new-arrival'
      fullPath: '/product/all/new-arrival'
      preLoaderRoute: typeof ProductAllNewArrivalImport
      parentRoute: typeof ProductAllRouteImport
    }
    '/seller/dashboard/account-settings': {
      id: '/seller/dashboard/account-settings'
      path: '/dashboard/account-settings'
      fullPath: '/seller/dashboard/account-settings'
      preLoaderRoute: typeof SellerDashboardAccountSettingsImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/dashboard/business-information': {
      id: '/seller/dashboard/business-information'
      path: '/dashboard/business-information'
      fullPath: '/seller/dashboard/business-information'
      preLoaderRoute: typeof SellerDashboardBusinessInformationImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/dashboard/update-password': {
      id: '/seller/dashboard/update-password'
      path: '/dashboard/update-password'
      fullPath: '/seller/dashboard/update-password'
      preLoaderRoute: typeof SellerDashboardUpdatePasswordImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/': {
      id: '/admin/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/profile/': {
      id: '/admin/profile/'
      path: '/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof AdminProfileIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/customer/address/': {
      id: '/customer/address/'
      path: '/address'
      fullPath: '/customer/address'
      preLoaderRoute: typeof CustomerAddressIndexImport
      parentRoute: typeof CustomerRouteImport
    }
    '/customer/order/': {
      id: '/customer/order/'
      path: '/'
      fullPath: '/customer/order/'
      preLoaderRoute: typeof CustomerOrderIndexImport
      parentRoute: typeof CustomerOrderRouteImport
    }
    '/customer/profile/': {
      id: '/customer/profile/'
      path: '/profile'
      fullPath: '/customer/profile'
      preLoaderRoute: typeof CustomerProfileIndexImport
      parentRoute: typeof CustomerRouteImport
    }
    '/product/all/': {
      id: '/product/all/'
      path: '/'
      fullPath: '/product/all/'
      preLoaderRoute: typeof ProductAllIndexImport
      parentRoute: typeof ProductAllRouteImport
    }
    '/seller/dashboard/': {
      id: '/seller/dashboard/'
      path: '/dashboard'
      fullPath: '/seller/dashboard'
      preLoaderRoute: typeof SellerDashboardIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/profile/': {
      id: '/seller/profile/'
      path: '/profile'
      fullPath: '/seller/profile'
      preLoaderRoute: typeof SellerProfileIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/admins/create': {
      id: '/admin/dashboard/admins/create'
      path: '/dashboard/admins/create'
      fullPath: '/admin/dashboard/admins/create'
      preLoaderRoute: typeof AdminDashboardAdminsCreateImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/categories/create': {
      id: '/admin/dashboard/categories/create'
      path: '/dashboard/categories/create'
      fullPath: '/admin/dashboard/categories/create'
      preLoaderRoute: typeof AdminDashboardCategoriesCreateImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/products/$id': {
      id: '/admin/dashboard/products/$id'
      path: '/dashboard/products/$id'
      fullPath: '/admin/dashboard/products/$id'
      preLoaderRoute: typeof AdminDashboardProductsIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/sellers/$id': {
      id: '/admin/dashboard/sellers/$id'
      path: '/dashboard/sellers/$id'
      fullPath: '/admin/dashboard/sellers/$id'
      preLoaderRoute: typeof AdminDashboardSellersIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/auth/(customer)/verify/$code': {
      id: '/auth/(customer)/verify/$code'
      path: '/verify/$code'
      fullPath: '/auth/verify/$code'
      preLoaderRoute: typeof AuthcustomerVerifyCodeImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/seller/verify/$code': {
      id: '/auth/seller/verify/$code'
      path: '/seller/verify/$code'
      fullPath: '/auth/seller/verify/$code'
      preLoaderRoute: typeof AuthSellerVerifyCodeImport
      parentRoute: typeof AuthRouteImport
    }
    '/admin/dashboard/admins/': {
      id: '/admin/dashboard/admins/'
      path: '/dashboard/admins'
      fullPath: '/admin/dashboard/admins'
      preLoaderRoute: typeof AdminDashboardAdminsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/categories/': {
      id: '/admin/dashboard/categories/'
      path: '/dashboard/categories'
      fullPath: '/admin/dashboard/categories'
      preLoaderRoute: typeof AdminDashboardCategoriesIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/customers/': {
      id: '/admin/dashboard/customers/'
      path: '/dashboard/customers'
      fullPath: '/admin/dashboard/customers'
      preLoaderRoute: typeof AdminDashboardCustomersIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/order-items/': {
      id: '/admin/dashboard/order-items/'
      path: '/'
      fullPath: '/admin/dashboard/order-items/'
      preLoaderRoute: typeof AdminDashboardOrderItemsIndexImport
      parentRoute: typeof AdminDashboardOrderItemsRouteImport
    }
    '/admin/dashboard/orders/': {
      id: '/admin/dashboard/orders/'
      path: '/'
      fullPath: '/admin/dashboard/orders/'
      preLoaderRoute: typeof AdminDashboardOrdersIndexImport
      parentRoute: typeof AdminDashboardOrdersRouteImport
    }
    '/admin/dashboard/products/': {
      id: '/admin/dashboard/products/'
      path: '/dashboard/products'
      fullPath: '/admin/dashboard/products'
      preLoaderRoute: typeof AdminDashboardProductsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/sellers/': {
      id: '/admin/dashboard/sellers/'
      path: '/dashboard/sellers'
      fullPath: '/admin/dashboard/sellers'
      preLoaderRoute: typeof AdminDashboardSellersIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/seller/dashboard/orders/': {
      id: '/seller/dashboard/orders/'
      path: '/'
      fullPath: '/seller/dashboard/orders/'
      preLoaderRoute: typeof SellerDashboardOrdersIndexImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
    '/seller/dashboard/products/': {
      id: '/seller/dashboard/products/'
      path: '/dashboard/products'
      fullPath: '/seller/dashboard/products'
      preLoaderRoute: typeof SellerDashboardProductsIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/admins/(edit)/$id': {
      id: '/admin/dashboard/admins/(edit)/$id'
      path: '/dashboard/admins/$id'
      fullPath: '/admin/dashboard/admins/$id'
      preLoaderRoute: typeof AdminDashboardAdminseditIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/categories/(edit)/$id': {
      id: '/admin/dashboard/categories/(edit)/$id'
      path: '/dashboard/categories/$id'
      fullPath: '/admin/dashboard/categories/$id'
      preLoaderRoute: typeof AdminDashboardCategorieseditIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/order-items/(order-items)/all': {
      id: '/admin/dashboard/order-items/(order-items)/all'
      path: '/all'
      fullPath: '/admin/dashboard/order-items/all'
      preLoaderRoute: typeof AdminDashboardOrderItemsorderItemsAllImport
      parentRoute: typeof AdminDashboardOrderItemsRouteImport
    }
    '/admin/dashboard/order-items/(order-items)/delivered': {
      id: '/admin/dashboard/order-items/(order-items)/delivered'
      path: '/delivered'
      fullPath: '/admin/dashboard/order-items/delivered'
      preLoaderRoute: typeof AdminDashboardOrderItemsorderItemsDeliveredImport
      parentRoute: typeof AdminDashboardOrderItemsRouteImport
    }
    '/admin/dashboard/order-items/(order-items)/fail-delivery': {
      id: '/admin/dashboard/order-items/(order-items)/fail-delivery'
      path: '/fail-delivery'
      fullPath: '/admin/dashboard/order-items/fail-delivery'
      preLoaderRoute: typeof AdminDashboardOrderItemsorderItemsFailDeliveryImport
      parentRoute: typeof AdminDashboardOrderItemsRouteImport
    }
    '/admin/dashboard/order-items/(order-items)/shipping': {
      id: '/admin/dashboard/order-items/(order-items)/shipping'
      path: '/shipping'
      fullPath: '/admin/dashboard/order-items/shipping'
      preLoaderRoute: typeof AdminDashboardOrderItemsorderItemsShippingImport
      parentRoute: typeof AdminDashboardOrderItemsRouteImport
    }
    '/admin/dashboard/orders/(orders)/all': {
      id: '/admin/dashboard/orders/(orders)/all'
      path: '/all'
      fullPath: '/admin/dashboard/orders/all'
      preLoaderRoute: typeof AdminDashboardOrdersordersAllImport
      parentRoute: typeof AdminDashboardOrdersRouteImport
    }
    '/seller/dashboard/orders/(orders)/all': {
      id: '/seller/dashboard/orders/(orders)/all'
      path: '/all'
      fullPath: '/seller/dashboard/orders/all'
      preLoaderRoute: typeof SellerDashboardOrdersordersAllImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
    '/seller/dashboard/orders/(orders)/cancel': {
      id: '/seller/dashboard/orders/(orders)/cancel'
      path: '/cancel'
      fullPath: '/seller/dashboard/orders/cancel'
      preLoaderRoute: typeof SellerDashboardOrdersordersCancelImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
    '/seller/dashboard/orders/(orders)/delivered': {
      id: '/seller/dashboard/orders/(orders)/delivered'
      path: '/delivered'
      fullPath: '/seller/dashboard/orders/delivered'
      preLoaderRoute: typeof SellerDashboardOrdersordersDeliveredImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
    '/seller/dashboard/orders/(orders)/fail-delivery': {
      id: '/seller/dashboard/orders/(orders)/fail-delivery'
      path: '/fail-delivery'
      fullPath: '/seller/dashboard/orders/fail-delivery'
      preLoaderRoute: typeof SellerDashboardOrdersordersFailDeliveryImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
    '/seller/dashboard/orders/(orders)/return-request': {
      id: '/seller/dashboard/orders/(orders)/return-request'
      path: '/return-request'
      fullPath: '/seller/dashboard/orders/return-request'
      preLoaderRoute: typeof SellerDashboardOrdersordersReturnRequestImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
    '/seller/dashboard/orders/(orders)/shipping': {
      id: '/seller/dashboard/orders/(orders)/shipping'
      path: '/shipping'
      fullPath: '/seller/dashboard/orders/shipping'
      preLoaderRoute: typeof SellerDashboardOrdersordersShippingImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
    '/seller/dashboard/orders/(orders)/toship': {
      id: '/seller/dashboard/orders/(orders)/toship'
      path: '/toship'
      fullPath: '/seller/dashboard/orders/toship'
      preLoaderRoute: typeof SellerDashboardOrdersordersToshipImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
    '/seller/dashboard/products/(product)/create': {
      id: '/seller/dashboard/products/(product)/create'
      path: '/dashboard/products/create'
      fullPath: '/seller/dashboard/products/create'
      preLoaderRoute: typeof SellerDashboardProductsproductCreateImport
      parentRoute: typeof SellerRouteImport
    }
    '/admin/dashboard/order-items/(order-items)/items/$id': {
      id: '/admin/dashboard/order-items/(order-items)/items/$id'
      path: '/items/$id'
      fullPath: '/admin/dashboard/order-items/items/$id'
      preLoaderRoute: typeof AdminDashboardOrderItemsorderItemsItemsIdImport
      parentRoute: typeof AdminDashboardOrderItemsRouteImport
    }
    '/seller/dashboard/products/(product)/$id_/edit': {
      id: '/seller/dashboard/products/(product)/$id_/edit'
      path: '/dashboard/products/$id/edit'
      fullPath: '/seller/dashboard/products/$id/edit'
      preLoaderRoute: typeof SellerDashboardProductsproductIdEditImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/dashboard/products/(product)/$id/': {
      id: '/seller/dashboard/products/(product)/$id/'
      path: '/dashboard/products/$id'
      fullPath: '/seller/dashboard/products/$id'
      preLoaderRoute: typeof SellerDashboardProductsproductIdIndexImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/dashboard/products/(product)/$id/variants/$variantId': {
      id: '/seller/dashboard/products/(product)/$id/variants/$variantId'
      path: '/dashboard/products/$id/variants/$variantId'
      fullPath: '/seller/dashboard/products/$id/variants/$variantId'
      preLoaderRoute: typeof SellerDashboardProductsproductIdVariantsVariantIdImport
      parentRoute: typeof SellerRouteImport
    }
    '/seller/dashboard/orders/(orders)/items/$id/': {
      id: '/seller/dashboard/orders/(orders)/items/$id/'
      path: '/items/$id'
      fullPath: '/seller/dashboard/orders/items/$id'
      preLoaderRoute: typeof SellerDashboardOrdersordersItemsIdIndexImport
      parentRoute: typeof SellerDashboardOrdersRouteImport
    }
  }
}

// Create and export the route tree

interface AdminDashboardOrderItemsRouteRouteChildren {
  AdminDashboardOrderItemsIndexRoute: typeof AdminDashboardOrderItemsIndexRoute
  AdminDashboardOrderItemsorderItemsAllRoute: typeof AdminDashboardOrderItemsorderItemsAllRoute
  AdminDashboardOrderItemsorderItemsDeliveredRoute: typeof AdminDashboardOrderItemsorderItemsDeliveredRoute
  AdminDashboardOrderItemsorderItemsFailDeliveryRoute: typeof AdminDashboardOrderItemsorderItemsFailDeliveryRoute
  AdminDashboardOrderItemsorderItemsShippingRoute: typeof AdminDashboardOrderItemsorderItemsShippingRoute
  AdminDashboardOrderItemsorderItemsItemsIdRoute: typeof AdminDashboardOrderItemsorderItemsItemsIdRoute
}

const AdminDashboardOrderItemsRouteRouteChildren: AdminDashboardOrderItemsRouteRouteChildren =
  {
    AdminDashboardOrderItemsIndexRoute: AdminDashboardOrderItemsIndexRoute,
    AdminDashboardOrderItemsorderItemsAllRoute:
      AdminDashboardOrderItemsorderItemsAllRoute,
    AdminDashboardOrderItemsorderItemsDeliveredRoute:
      AdminDashboardOrderItemsorderItemsDeliveredRoute,
    AdminDashboardOrderItemsorderItemsFailDeliveryRoute:
      AdminDashboardOrderItemsorderItemsFailDeliveryRoute,
    AdminDashboardOrderItemsorderItemsShippingRoute:
      AdminDashboardOrderItemsorderItemsShippingRoute,
    AdminDashboardOrderItemsorderItemsItemsIdRoute:
      AdminDashboardOrderItemsorderItemsItemsIdRoute,
  }

const AdminDashboardOrderItemsRouteRouteWithChildren =
  AdminDashboardOrderItemsRouteRoute._addFileChildren(
    AdminDashboardOrderItemsRouteRouteChildren,
  )

interface AdminDashboardOrdersRouteRouteChildren {
  AdminDashboardOrdersIndexRoute: typeof AdminDashboardOrdersIndexRoute
  AdminDashboardOrdersordersAllRoute: typeof AdminDashboardOrdersordersAllRoute
}

const AdminDashboardOrdersRouteRouteChildren: AdminDashboardOrdersRouteRouteChildren =
  {
    AdminDashboardOrdersIndexRoute: AdminDashboardOrdersIndexRoute,
    AdminDashboardOrdersordersAllRoute: AdminDashboardOrdersordersAllRoute,
  }

const AdminDashboardOrdersRouteRouteWithChildren =
  AdminDashboardOrdersRouteRoute._addFileChildren(
    AdminDashboardOrdersRouteRouteChildren,
  )

interface AdminRouteRouteChildren {
  AdminDashboardOrderItemsRouteRoute: typeof AdminDashboardOrderItemsRouteRouteWithChildren
  AdminDashboardOrdersRouteRoute: typeof AdminDashboardOrdersRouteRouteWithChildren
  AdminDashboardAccountSettingsRoute: typeof AdminDashboardAccountSettingsRoute
  AdminDashboardUpdatePasswordRoute: typeof AdminDashboardUpdatePasswordRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  AdminProfileIndexRoute: typeof AdminProfileIndexRoute
  AdminDashboardAdminsCreateRoute: typeof AdminDashboardAdminsCreateRoute
  AdminDashboardCategoriesCreateRoute: typeof AdminDashboardCategoriesCreateRoute
  AdminDashboardProductsIdRoute: typeof AdminDashboardProductsIdRoute
  AdminDashboardSellersIdRoute: typeof AdminDashboardSellersIdRoute
  AdminDashboardAdminsIndexRoute: typeof AdminDashboardAdminsIndexRoute
  AdminDashboardCategoriesIndexRoute: typeof AdminDashboardCategoriesIndexRoute
  AdminDashboardCustomersIndexRoute: typeof AdminDashboardCustomersIndexRoute
  AdminDashboardProductsIndexRoute: typeof AdminDashboardProductsIndexRoute
  AdminDashboardSellersIndexRoute: typeof AdminDashboardSellersIndexRoute
  AdminDashboardAdminseditIdRoute: typeof AdminDashboardAdminseditIdRoute
  AdminDashboardCategorieseditIdRoute: typeof AdminDashboardCategorieseditIdRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminDashboardOrderItemsRouteRoute:
    AdminDashboardOrderItemsRouteRouteWithChildren,
  AdminDashboardOrdersRouteRoute: AdminDashboardOrdersRouteRouteWithChildren,
  AdminDashboardAccountSettingsRoute: AdminDashboardAccountSettingsRoute,
  AdminDashboardUpdatePasswordRoute: AdminDashboardUpdatePasswordRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  AdminProfileIndexRoute: AdminProfileIndexRoute,
  AdminDashboardAdminsCreateRoute: AdminDashboardAdminsCreateRoute,
  AdminDashboardCategoriesCreateRoute: AdminDashboardCategoriesCreateRoute,
  AdminDashboardProductsIdRoute: AdminDashboardProductsIdRoute,
  AdminDashboardSellersIdRoute: AdminDashboardSellersIdRoute,
  AdminDashboardAdminsIndexRoute: AdminDashboardAdminsIndexRoute,
  AdminDashboardCategoriesIndexRoute: AdminDashboardCategoriesIndexRoute,
  AdminDashboardCustomersIndexRoute: AdminDashboardCustomersIndexRoute,
  AdminDashboardProductsIndexRoute: AdminDashboardProductsIndexRoute,
  AdminDashboardSellersIndexRoute: AdminDashboardSellersIndexRoute,
  AdminDashboardAdminseditIdRoute: AdminDashboardAdminseditIdRoute,
  AdminDashboardCategorieseditIdRoute: AdminDashboardCategorieseditIdRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthcustomerLoginRoute: typeof AuthcustomerLoginRoute
  AuthcustomerRegisterRoute: typeof AuthcustomerRegisterRoute
  AuthAdminLoginRoute: typeof AuthAdminLoginRoute
  AuthSellerLoginRoute: typeof AuthSellerLoginRoute
  AuthSellerRegisterRoute: typeof AuthSellerRegisterRoute
  AuthcustomerVerifyCodeRoute: typeof AuthcustomerVerifyCodeRoute
  AuthSellerVerifyCodeRoute: typeof AuthSellerVerifyCodeRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthcustomerLoginRoute: AuthcustomerLoginRoute,
  AuthcustomerRegisterRoute: AuthcustomerRegisterRoute,
  AuthAdminLoginRoute: AuthAdminLoginRoute,
  AuthSellerLoginRoute: AuthSellerLoginRoute,
  AuthSellerRegisterRoute: AuthSellerRegisterRoute,
  AuthcustomerVerifyCodeRoute: AuthcustomerVerifyCodeRoute,
  AuthSellerVerifyCodeRoute: AuthSellerVerifyCodeRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface CartRouteRouteChildren {
  CartIndexRoute: typeof CartIndexRoute
}

const CartRouteRouteChildren: CartRouteRouteChildren = {
  CartIndexRoute: CartIndexRoute,
}

const CartRouteRouteWithChildren = CartRouteRoute._addFileChildren(
  CartRouteRouteChildren,
)

interface CustomerOrderRouteRouteChildren {
  CustomerOrderCompletedRoute: typeof CustomerOrderCompletedRoute
  CustomerOrderProcessingRoute: typeof CustomerOrderProcessingRoute
  CustomerOrderIndexRoute: typeof CustomerOrderIndexRoute
}

const CustomerOrderRouteRouteChildren: CustomerOrderRouteRouteChildren = {
  CustomerOrderCompletedRoute: CustomerOrderCompletedRoute,
  CustomerOrderProcessingRoute: CustomerOrderProcessingRoute,
  CustomerOrderIndexRoute: CustomerOrderIndexRoute,
}

const CustomerOrderRouteRouteWithChildren =
  CustomerOrderRouteRoute._addFileChildren(CustomerOrderRouteRouteChildren)

interface CustomerRouteRouteChildren {
  CustomerOrderRouteRoute: typeof CustomerOrderRouteRouteWithChildren
  CustomerUpdatePasswordRoute: typeof CustomerUpdatePasswordRoute
  CustomerAddressIdRoute: typeof CustomerAddressIdRoute
  CustomerAddressCreateRoute: typeof CustomerAddressCreateRoute
  CustomerProfileUpdateRoute: typeof CustomerProfileUpdateRoute
  CustomerAddressIndexRoute: typeof CustomerAddressIndexRoute
  CustomerProfileIndexRoute: typeof CustomerProfileIndexRoute
}

const CustomerRouteRouteChildren: CustomerRouteRouteChildren = {
  CustomerOrderRouteRoute: CustomerOrderRouteRouteWithChildren,
  CustomerUpdatePasswordRoute: CustomerUpdatePasswordRoute,
  CustomerAddressIdRoute: CustomerAddressIdRoute,
  CustomerAddressCreateRoute: CustomerAddressCreateRoute,
  CustomerProfileUpdateRoute: CustomerProfileUpdateRoute,
  CustomerAddressIndexRoute: CustomerAddressIndexRoute,
  CustomerProfileIndexRoute: CustomerProfileIndexRoute,
}

const CustomerRouteRouteWithChildren = CustomerRouteRoute._addFileChildren(
  CustomerRouteRouteChildren,
)

interface SellerDashboardOrdersRouteRouteChildren {
  SellerDashboardOrdersIndexRoute: typeof SellerDashboardOrdersIndexRoute
  SellerDashboardOrdersordersAllRoute: typeof SellerDashboardOrdersordersAllRoute
  SellerDashboardOrdersordersCancelRoute: typeof SellerDashboardOrdersordersCancelRoute
  SellerDashboardOrdersordersDeliveredRoute: typeof SellerDashboardOrdersordersDeliveredRoute
  SellerDashboardOrdersordersFailDeliveryRoute: typeof SellerDashboardOrdersordersFailDeliveryRoute
  SellerDashboardOrdersordersReturnRequestRoute: typeof SellerDashboardOrdersordersReturnRequestRoute
  SellerDashboardOrdersordersShippingRoute: typeof SellerDashboardOrdersordersShippingRoute
  SellerDashboardOrdersordersToshipRoute: typeof SellerDashboardOrdersordersToshipRoute
  SellerDashboardOrdersordersItemsIdIndexRoute: typeof SellerDashboardOrdersordersItemsIdIndexRoute
}

const SellerDashboardOrdersRouteRouteChildren: SellerDashboardOrdersRouteRouteChildren =
  {
    SellerDashboardOrdersIndexRoute: SellerDashboardOrdersIndexRoute,
    SellerDashboardOrdersordersAllRoute: SellerDashboardOrdersordersAllRoute,
    SellerDashboardOrdersordersCancelRoute:
      SellerDashboardOrdersordersCancelRoute,
    SellerDashboardOrdersordersDeliveredRoute:
      SellerDashboardOrdersordersDeliveredRoute,
    SellerDashboardOrdersordersFailDeliveryRoute:
      SellerDashboardOrdersordersFailDeliveryRoute,
    SellerDashboardOrdersordersReturnRequestRoute:
      SellerDashboardOrdersordersReturnRequestRoute,
    SellerDashboardOrdersordersShippingRoute:
      SellerDashboardOrdersordersShippingRoute,
    SellerDashboardOrdersordersToshipRoute:
      SellerDashboardOrdersordersToshipRoute,
    SellerDashboardOrdersordersItemsIdIndexRoute:
      SellerDashboardOrdersordersItemsIdIndexRoute,
  }

const SellerDashboardOrdersRouteRouteWithChildren =
  SellerDashboardOrdersRouteRoute._addFileChildren(
    SellerDashboardOrdersRouteRouteChildren,
  )

interface SellerRouteRouteChildren {
  SellerDashboardOrdersRouteRoute: typeof SellerDashboardOrdersRouteRouteWithChildren
  SellerDashboardAccountSettingsRoute: typeof SellerDashboardAccountSettingsRoute
  SellerDashboardBusinessInformationRoute: typeof SellerDashboardBusinessInformationRoute
  SellerDashboardUpdatePasswordRoute: typeof SellerDashboardUpdatePasswordRoute
  SellerDashboardIndexRoute: typeof SellerDashboardIndexRoute
  SellerProfileIndexRoute: typeof SellerProfileIndexRoute
  SellerDashboardProductsIndexRoute: typeof SellerDashboardProductsIndexRoute
  SellerDashboardProductsproductCreateRoute: typeof SellerDashboardProductsproductCreateRoute
  SellerDashboardProductsproductIdEditRoute: typeof SellerDashboardProductsproductIdEditRoute
  SellerDashboardProductsproductIdIndexRoute: typeof SellerDashboardProductsproductIdIndexRoute
  SellerDashboardProductsproductIdVariantsVariantIdRoute: typeof SellerDashboardProductsproductIdVariantsVariantIdRoute
}

const SellerRouteRouteChildren: SellerRouteRouteChildren = {
  SellerDashboardOrdersRouteRoute: SellerDashboardOrdersRouteRouteWithChildren,
  SellerDashboardAccountSettingsRoute: SellerDashboardAccountSettingsRoute,
  SellerDashboardBusinessInformationRoute:
    SellerDashboardBusinessInformationRoute,
  SellerDashboardUpdatePasswordRoute: SellerDashboardUpdatePasswordRoute,
  SellerDashboardIndexRoute: SellerDashboardIndexRoute,
  SellerProfileIndexRoute: SellerProfileIndexRoute,
  SellerDashboardProductsIndexRoute: SellerDashboardProductsIndexRoute,
  SellerDashboardProductsproductCreateRoute:
    SellerDashboardProductsproductCreateRoute,
  SellerDashboardProductsproductIdEditRoute:
    SellerDashboardProductsproductIdEditRoute,
  SellerDashboardProductsproductIdIndexRoute:
    SellerDashboardProductsproductIdIndexRoute,
  SellerDashboardProductsproductIdVariantsVariantIdRoute:
    SellerDashboardProductsproductIdVariantsVariantIdRoute,
}

const SellerRouteRouteWithChildren = SellerRouteRoute._addFileChildren(
  SellerRouteRouteChildren,
)

interface ProductAllRouteRouteChildren {
  ProductAllBestSellRoute: typeof ProductAllBestSellRoute
  ProductAllFeatureProductRoute: typeof ProductAllFeatureProductRoute
  ProductAllNewArrivalRoute: typeof ProductAllNewArrivalRoute
  ProductAllIndexRoute: typeof ProductAllIndexRoute
}

const ProductAllRouteRouteChildren: ProductAllRouteRouteChildren = {
  ProductAllBestSellRoute: ProductAllBestSellRoute,
  ProductAllFeatureProductRoute: ProductAllFeatureProductRoute,
  ProductAllNewArrivalRoute: ProductAllNewArrivalRoute,
  ProductAllIndexRoute: ProductAllIndexRoute,
}

const ProductAllRouteRouteWithChildren = ProductAllRouteRoute._addFileChildren(
  ProductAllRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/cart': typeof CartRouteRouteWithChildren
  '/customer': typeof CustomerRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/customer/order': typeof CustomerOrderRouteRouteWithChildren
  '/product/all': typeof ProductAllRouteRouteWithChildren
  '/customer/update-password': typeof CustomerUpdatePasswordRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/product/$id': typeof ProductIdRoute
  '/cart/': typeof CartIndexRoute
  '/checkout': typeof CheckoutIndexRoute
  '/admin/dashboard/order-items': typeof AdminDashboardOrderItemsRouteRouteWithChildren
  '/admin/dashboard/orders': typeof AdminDashboardOrdersRouteRouteWithChildren
  '/seller/dashboard/orders': typeof SellerDashboardOrdersRouteRouteWithChildren
  '/admin/dashboard/account-settings': typeof AdminDashboardAccountSettingsRoute
  '/admin/dashboard/update-password': typeof AdminDashboardUpdatePasswordRoute
  '/auth/login': typeof AuthcustomerLoginRoute
  '/auth/register': typeof AuthcustomerRegisterRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/seller/login': typeof AuthSellerLoginRoute
  '/auth/seller/register': typeof AuthSellerRegisterRoute
  '/customer/address/$id': typeof CustomerAddressIdRoute
  '/customer/address/create': typeof CustomerAddressCreateRoute
  '/customer/order/completed': typeof CustomerOrderCompletedRoute
  '/customer/order/processing': typeof CustomerOrderProcessingRoute
  '/customer/profile/update': typeof CustomerProfileUpdateRoute
  '/product/all/best-sell': typeof ProductAllBestSellRoute
  '/product/all/feature-product': typeof ProductAllFeatureProductRoute
  '/product/all/new-arrival': typeof ProductAllNewArrivalRoute
  '/seller/dashboard/account-settings': typeof SellerDashboardAccountSettingsRoute
  '/seller/dashboard/business-information': typeof SellerDashboardBusinessInformationRoute
  '/seller/dashboard/update-password': typeof SellerDashboardUpdatePasswordRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/profile': typeof AdminProfileIndexRoute
  '/customer/address': typeof CustomerAddressIndexRoute
  '/customer/order/': typeof CustomerOrderIndexRoute
  '/customer/profile': typeof CustomerProfileIndexRoute
  '/product/all/': typeof ProductAllIndexRoute
  '/seller/dashboard': typeof SellerDashboardIndexRoute
  '/seller/profile': typeof SellerProfileIndexRoute
  '/admin/dashboard/admins/create': typeof AdminDashboardAdminsCreateRoute
  '/admin/dashboard/categories/create': typeof AdminDashboardCategoriesCreateRoute
  '/admin/dashboard/products/$id': typeof AdminDashboardProductsIdRoute
  '/admin/dashboard/sellers/$id': typeof AdminDashboardSellersIdRoute
  '/auth/verify/$code': typeof AuthcustomerVerifyCodeRoute
  '/auth/seller/verify/$code': typeof AuthSellerVerifyCodeRoute
  '/admin/dashboard/admins': typeof AdminDashboardAdminsIndexRoute
  '/admin/dashboard/categories': typeof AdminDashboardCategoriesIndexRoute
  '/admin/dashboard/customers': typeof AdminDashboardCustomersIndexRoute
  '/admin/dashboard/order-items/': typeof AdminDashboardOrderItemsIndexRoute
  '/admin/dashboard/orders/': typeof AdminDashboardOrdersIndexRoute
  '/admin/dashboard/products': typeof AdminDashboardProductsIndexRoute
  '/admin/dashboard/sellers': typeof AdminDashboardSellersIndexRoute
  '/seller/dashboard/orders/': typeof SellerDashboardOrdersIndexRoute
  '/seller/dashboard/products': typeof SellerDashboardProductsIndexRoute
  '/admin/dashboard/admins/$id': typeof AdminDashboardAdminseditIdRoute
  '/admin/dashboard/categories/$id': typeof AdminDashboardCategorieseditIdRoute
  '/admin/dashboard/order-items/all': typeof AdminDashboardOrderItemsorderItemsAllRoute
  '/admin/dashboard/order-items/delivered': typeof AdminDashboardOrderItemsorderItemsDeliveredRoute
  '/admin/dashboard/order-items/fail-delivery': typeof AdminDashboardOrderItemsorderItemsFailDeliveryRoute
  '/admin/dashboard/order-items/shipping': typeof AdminDashboardOrderItemsorderItemsShippingRoute
  '/admin/dashboard/orders/all': typeof AdminDashboardOrdersordersAllRoute
  '/seller/dashboard/orders/all': typeof SellerDashboardOrdersordersAllRoute
  '/seller/dashboard/orders/cancel': typeof SellerDashboardOrdersordersCancelRoute
  '/seller/dashboard/orders/delivered': typeof SellerDashboardOrdersordersDeliveredRoute
  '/seller/dashboard/orders/fail-delivery': typeof SellerDashboardOrdersordersFailDeliveryRoute
  '/seller/dashboard/orders/return-request': typeof SellerDashboardOrdersordersReturnRequestRoute
  '/seller/dashboard/orders/shipping': typeof SellerDashboardOrdersordersShippingRoute
  '/seller/dashboard/orders/toship': typeof SellerDashboardOrdersordersToshipRoute
  '/seller/dashboard/products/create': typeof SellerDashboardProductsproductCreateRoute
  '/admin/dashboard/order-items/items/$id': typeof AdminDashboardOrderItemsorderItemsItemsIdRoute
  '/seller/dashboard/products/$id/edit': typeof SellerDashboardProductsproductIdEditRoute
  '/seller/dashboard/products/$id': typeof SellerDashboardProductsproductIdIndexRoute
  '/seller/dashboard/products/$id/variants/$variantId': typeof SellerDashboardProductsproductIdVariantsVariantIdRoute
  '/seller/dashboard/orders/items/$id': typeof SellerDashboardOrdersordersItemsIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/customer': typeof CustomerRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/customer/update-password': typeof CustomerUpdatePasswordRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/product/$id': typeof ProductIdRoute
  '/cart': typeof CartIndexRoute
  '/checkout': typeof CheckoutIndexRoute
  '/admin/dashboard/account-settings': typeof AdminDashboardAccountSettingsRoute
  '/admin/dashboard/update-password': typeof AdminDashboardUpdatePasswordRoute
  '/auth/login': typeof AuthcustomerLoginRoute
  '/auth/register': typeof AuthcustomerRegisterRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/seller/login': typeof AuthSellerLoginRoute
  '/auth/seller/register': typeof AuthSellerRegisterRoute
  '/customer/address/$id': typeof CustomerAddressIdRoute
  '/customer/address/create': typeof CustomerAddressCreateRoute
  '/customer/order/completed': typeof CustomerOrderCompletedRoute
  '/customer/order/processing': typeof CustomerOrderProcessingRoute
  '/customer/profile/update': typeof CustomerProfileUpdateRoute
  '/product/all/best-sell': typeof ProductAllBestSellRoute
  '/product/all/feature-product': typeof ProductAllFeatureProductRoute
  '/product/all/new-arrival': typeof ProductAllNewArrivalRoute
  '/seller/dashboard/account-settings': typeof SellerDashboardAccountSettingsRoute
  '/seller/dashboard/business-information': typeof SellerDashboardBusinessInformationRoute
  '/seller/dashboard/update-password': typeof SellerDashboardUpdatePasswordRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/profile': typeof AdminProfileIndexRoute
  '/customer/address': typeof CustomerAddressIndexRoute
  '/customer/order': typeof CustomerOrderIndexRoute
  '/customer/profile': typeof CustomerProfileIndexRoute
  '/product/all': typeof ProductAllIndexRoute
  '/seller/dashboard': typeof SellerDashboardIndexRoute
  '/seller/profile': typeof SellerProfileIndexRoute
  '/admin/dashboard/admins/create': typeof AdminDashboardAdminsCreateRoute
  '/admin/dashboard/categories/create': typeof AdminDashboardCategoriesCreateRoute
  '/admin/dashboard/products/$id': typeof AdminDashboardProductsIdRoute
  '/admin/dashboard/sellers/$id': typeof AdminDashboardSellersIdRoute
  '/auth/verify/$code': typeof AuthcustomerVerifyCodeRoute
  '/auth/seller/verify/$code': typeof AuthSellerVerifyCodeRoute
  '/admin/dashboard/admins': typeof AdminDashboardAdminsIndexRoute
  '/admin/dashboard/categories': typeof AdminDashboardCategoriesIndexRoute
  '/admin/dashboard/customers': typeof AdminDashboardCustomersIndexRoute
  '/admin/dashboard/order-items': typeof AdminDashboardOrderItemsIndexRoute
  '/admin/dashboard/orders': typeof AdminDashboardOrdersIndexRoute
  '/admin/dashboard/products': typeof AdminDashboardProductsIndexRoute
  '/admin/dashboard/sellers': typeof AdminDashboardSellersIndexRoute
  '/seller/dashboard/orders': typeof SellerDashboardOrdersIndexRoute
  '/seller/dashboard/products': typeof SellerDashboardProductsIndexRoute
  '/admin/dashboard/admins/$id': typeof AdminDashboardAdminseditIdRoute
  '/admin/dashboard/categories/$id': typeof AdminDashboardCategorieseditIdRoute
  '/admin/dashboard/order-items/all': typeof AdminDashboardOrderItemsorderItemsAllRoute
  '/admin/dashboard/order-items/delivered': typeof AdminDashboardOrderItemsorderItemsDeliveredRoute
  '/admin/dashboard/order-items/fail-delivery': typeof AdminDashboardOrderItemsorderItemsFailDeliveryRoute
  '/admin/dashboard/order-items/shipping': typeof AdminDashboardOrderItemsorderItemsShippingRoute
  '/admin/dashboard/orders/all': typeof AdminDashboardOrdersordersAllRoute
  '/seller/dashboard/orders/all': typeof SellerDashboardOrdersordersAllRoute
  '/seller/dashboard/orders/cancel': typeof SellerDashboardOrdersordersCancelRoute
  '/seller/dashboard/orders/delivered': typeof SellerDashboardOrdersordersDeliveredRoute
  '/seller/dashboard/orders/fail-delivery': typeof SellerDashboardOrdersordersFailDeliveryRoute
  '/seller/dashboard/orders/return-request': typeof SellerDashboardOrdersordersReturnRequestRoute
  '/seller/dashboard/orders/shipping': typeof SellerDashboardOrdersordersShippingRoute
  '/seller/dashboard/orders/toship': typeof SellerDashboardOrdersordersToshipRoute
  '/seller/dashboard/products/create': typeof SellerDashboardProductsproductCreateRoute
  '/admin/dashboard/order-items/items/$id': typeof AdminDashboardOrderItemsorderItemsItemsIdRoute
  '/seller/dashboard/products/$id/edit': typeof SellerDashboardProductsproductIdEditRoute
  '/seller/dashboard/products/$id': typeof SellerDashboardProductsproductIdIndexRoute
  '/seller/dashboard/products/$id/variants/$variantId': typeof SellerDashboardProductsproductIdVariantsVariantIdRoute
  '/seller/dashboard/orders/items/$id': typeof SellerDashboardOrdersordersItemsIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/cart': typeof CartRouteRouteWithChildren
  '/customer': typeof CustomerRouteRouteWithChildren
  '/seller': typeof SellerRouteRouteWithChildren
  '/customer/order': typeof CustomerOrderRouteRouteWithChildren
  '/product/all': typeof ProductAllRouteRouteWithChildren
  '/customer/update-password': typeof CustomerUpdatePasswordRoute
  '/payment/success': typeof PaymentSuccessRoute
  '/product/$id': typeof ProductIdRoute
  '/cart/': typeof CartIndexRoute
  '/checkout/': typeof CheckoutIndexRoute
  '/admin/dashboard/order-items': typeof AdminDashboardOrderItemsRouteRouteWithChildren
  '/admin/dashboard/orders': typeof AdminDashboardOrdersRouteRouteWithChildren
  '/seller/dashboard/orders': typeof SellerDashboardOrdersRouteRouteWithChildren
  '/admin/dashboard/account-settings': typeof AdminDashboardAccountSettingsRoute
  '/admin/dashboard/update-password': typeof AdminDashboardUpdatePasswordRoute
  '/auth/(customer)/login': typeof AuthcustomerLoginRoute
  '/auth/(customer)/register': typeof AuthcustomerRegisterRoute
  '/auth/admin/login': typeof AuthAdminLoginRoute
  '/auth/seller/login': typeof AuthSellerLoginRoute
  '/auth/seller/register': typeof AuthSellerRegisterRoute
  '/customer/address/$id': typeof CustomerAddressIdRoute
  '/customer/address/create': typeof CustomerAddressCreateRoute
  '/customer/order/completed': typeof CustomerOrderCompletedRoute
  '/customer/order/processing': typeof CustomerOrderProcessingRoute
  '/customer/profile/update': typeof CustomerProfileUpdateRoute
  '/product/all/best-sell': typeof ProductAllBestSellRoute
  '/product/all/feature-product': typeof ProductAllFeatureProductRoute
  '/product/all/new-arrival': typeof ProductAllNewArrivalRoute
  '/seller/dashboard/account-settings': typeof SellerDashboardAccountSettingsRoute
  '/seller/dashboard/business-information': typeof SellerDashboardBusinessInformationRoute
  '/seller/dashboard/update-password': typeof SellerDashboardUpdatePasswordRoute
  '/admin/dashboard/': typeof AdminDashboardIndexRoute
  '/admin/profile/': typeof AdminProfileIndexRoute
  '/customer/address/': typeof CustomerAddressIndexRoute
  '/customer/order/': typeof CustomerOrderIndexRoute
  '/customer/profile/': typeof CustomerProfileIndexRoute
  '/product/all/': typeof ProductAllIndexRoute
  '/seller/dashboard/': typeof SellerDashboardIndexRoute
  '/seller/profile/': typeof SellerProfileIndexRoute
  '/admin/dashboard/admins/create': typeof AdminDashboardAdminsCreateRoute
  '/admin/dashboard/categories/create': typeof AdminDashboardCategoriesCreateRoute
  '/admin/dashboard/products/$id': typeof AdminDashboardProductsIdRoute
  '/admin/dashboard/sellers/$id': typeof AdminDashboardSellersIdRoute
  '/auth/(customer)/verify/$code': typeof AuthcustomerVerifyCodeRoute
  '/auth/seller/verify/$code': typeof AuthSellerVerifyCodeRoute
  '/admin/dashboard/admins/': typeof AdminDashboardAdminsIndexRoute
  '/admin/dashboard/categories/': typeof AdminDashboardCategoriesIndexRoute
  '/admin/dashboard/customers/': typeof AdminDashboardCustomersIndexRoute
  '/admin/dashboard/order-items/': typeof AdminDashboardOrderItemsIndexRoute
  '/admin/dashboard/orders/': typeof AdminDashboardOrdersIndexRoute
  '/admin/dashboard/products/': typeof AdminDashboardProductsIndexRoute
  '/admin/dashboard/sellers/': typeof AdminDashboardSellersIndexRoute
  '/seller/dashboard/orders/': typeof SellerDashboardOrdersIndexRoute
  '/seller/dashboard/products/': typeof SellerDashboardProductsIndexRoute
  '/admin/dashboard/admins/(edit)/$id': typeof AdminDashboardAdminseditIdRoute
  '/admin/dashboard/categories/(edit)/$id': typeof AdminDashboardCategorieseditIdRoute
  '/admin/dashboard/order-items/(order-items)/all': typeof AdminDashboardOrderItemsorderItemsAllRoute
  '/admin/dashboard/order-items/(order-items)/delivered': typeof AdminDashboardOrderItemsorderItemsDeliveredRoute
  '/admin/dashboard/order-items/(order-items)/fail-delivery': typeof AdminDashboardOrderItemsorderItemsFailDeliveryRoute
  '/admin/dashboard/order-items/(order-items)/shipping': typeof AdminDashboardOrderItemsorderItemsShippingRoute
  '/admin/dashboard/orders/(orders)/all': typeof AdminDashboardOrdersordersAllRoute
  '/seller/dashboard/orders/(orders)/all': typeof SellerDashboardOrdersordersAllRoute
  '/seller/dashboard/orders/(orders)/cancel': typeof SellerDashboardOrdersordersCancelRoute
  '/seller/dashboard/orders/(orders)/delivered': typeof SellerDashboardOrdersordersDeliveredRoute
  '/seller/dashboard/orders/(orders)/fail-delivery': typeof SellerDashboardOrdersordersFailDeliveryRoute
  '/seller/dashboard/orders/(orders)/return-request': typeof SellerDashboardOrdersordersReturnRequestRoute
  '/seller/dashboard/orders/(orders)/shipping': typeof SellerDashboardOrdersordersShippingRoute
  '/seller/dashboard/orders/(orders)/toship': typeof SellerDashboardOrdersordersToshipRoute
  '/seller/dashboard/products/(product)/create': typeof SellerDashboardProductsproductCreateRoute
  '/admin/dashboard/order-items/(order-items)/items/$id': typeof AdminDashboardOrderItemsorderItemsItemsIdRoute
  '/seller/dashboard/products/(product)/$id_/edit': typeof SellerDashboardProductsproductIdEditRoute
  '/seller/dashboard/products/(product)/$id/': typeof SellerDashboardProductsproductIdIndexRoute
  '/seller/dashboard/products/(product)/$id/variants/$variantId': typeof SellerDashboardProductsproductIdVariantsVariantIdRoute
  '/seller/dashboard/orders/(orders)/items/$id/': typeof SellerDashboardOrdersordersItemsIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/cart'
    | '/customer'
    | '/seller'
    | '/customer/order'
    | '/product/all'
    | '/customer/update-password'
    | '/payment/success'
    | '/product/$id'
    | '/cart/'
    | '/checkout'
    | '/admin/dashboard/order-items'
    | '/admin/dashboard/orders'
    | '/seller/dashboard/orders'
    | '/admin/dashboard/account-settings'
    | '/admin/dashboard/update-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/admin/login'
    | '/auth/seller/login'
    | '/auth/seller/register'
    | '/customer/address/$id'
    | '/customer/address/create'
    | '/customer/order/completed'
    | '/customer/order/processing'
    | '/customer/profile/update'
    | '/product/all/best-sell'
    | '/product/all/feature-product'
    | '/product/all/new-arrival'
    | '/seller/dashboard/account-settings'
    | '/seller/dashboard/business-information'
    | '/seller/dashboard/update-password'
    | '/admin/dashboard'
    | '/admin/profile'
    | '/customer/address'
    | '/customer/order/'
    | '/customer/profile'
    | '/product/all/'
    | '/seller/dashboard'
    | '/seller/profile'
    | '/admin/dashboard/admins/create'
    | '/admin/dashboard/categories/create'
    | '/admin/dashboard/products/$id'
    | '/admin/dashboard/sellers/$id'
    | '/auth/verify/$code'
    | '/auth/seller/verify/$code'
    | '/admin/dashboard/admins'
    | '/admin/dashboard/categories'
    | '/admin/dashboard/customers'
    | '/admin/dashboard/order-items/'
    | '/admin/dashboard/orders/'
    | '/admin/dashboard/products'
    | '/admin/dashboard/sellers'
    | '/seller/dashboard/orders/'
    | '/seller/dashboard/products'
    | '/admin/dashboard/admins/$id'
    | '/admin/dashboard/categories/$id'
    | '/admin/dashboard/order-items/all'
    | '/admin/dashboard/order-items/delivered'
    | '/admin/dashboard/order-items/fail-delivery'
    | '/admin/dashboard/order-items/shipping'
    | '/admin/dashboard/orders/all'
    | '/seller/dashboard/orders/all'
    | '/seller/dashboard/orders/cancel'
    | '/seller/dashboard/orders/delivered'
    | '/seller/dashboard/orders/fail-delivery'
    | '/seller/dashboard/orders/return-request'
    | '/seller/dashboard/orders/shipping'
    | '/seller/dashboard/orders/toship'
    | '/seller/dashboard/products/create'
    | '/admin/dashboard/order-items/items/$id'
    | '/seller/dashboard/products/$id/edit'
    | '/seller/dashboard/products/$id'
    | '/seller/dashboard/products/$id/variants/$variantId'
    | '/seller/dashboard/orders/items/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/auth'
    | '/customer'
    | '/seller'
    | '/customer/update-password'
    | '/payment/success'
    | '/product/$id'
    | '/cart'
    | '/checkout'
    | '/admin/dashboard/account-settings'
    | '/admin/dashboard/update-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/admin/login'
    | '/auth/seller/login'
    | '/auth/seller/register'
    | '/customer/address/$id'
    | '/customer/address/create'
    | '/customer/order/completed'
    | '/customer/order/processing'
    | '/customer/profile/update'
    | '/product/all/best-sell'
    | '/product/all/feature-product'
    | '/product/all/new-arrival'
    | '/seller/dashboard/account-settings'
    | '/seller/dashboard/business-information'
    | '/seller/dashboard/update-password'
    | '/admin/dashboard'
    | '/admin/profile'
    | '/customer/address'
    | '/customer/order'
    | '/customer/profile'
    | '/product/all'
    | '/seller/dashboard'
    | '/seller/profile'
    | '/admin/dashboard/admins/create'
    | '/admin/dashboard/categories/create'
    | '/admin/dashboard/products/$id'
    | '/admin/dashboard/sellers/$id'
    | '/auth/verify/$code'
    | '/auth/seller/verify/$code'
    | '/admin/dashboard/admins'
    | '/admin/dashboard/categories'
    | '/admin/dashboard/customers'
    | '/admin/dashboard/order-items'
    | '/admin/dashboard/orders'
    | '/admin/dashboard/products'
    | '/admin/dashboard/sellers'
    | '/seller/dashboard/orders'
    | '/seller/dashboard/products'
    | '/admin/dashboard/admins/$id'
    | '/admin/dashboard/categories/$id'
    | '/admin/dashboard/order-items/all'
    | '/admin/dashboard/order-items/delivered'
    | '/admin/dashboard/order-items/fail-delivery'
    | '/admin/dashboard/order-items/shipping'
    | '/admin/dashboard/orders/all'
    | '/seller/dashboard/orders/all'
    | '/seller/dashboard/orders/cancel'
    | '/seller/dashboard/orders/delivered'
    | '/seller/dashboard/orders/fail-delivery'
    | '/seller/dashboard/orders/return-request'
    | '/seller/dashboard/orders/shipping'
    | '/seller/dashboard/orders/toship'
    | '/seller/dashboard/products/create'
    | '/admin/dashboard/order-items/items/$id'
    | '/seller/dashboard/products/$id/edit'
    | '/seller/dashboard/products/$id'
    | '/seller/dashboard/products/$id/variants/$variantId'
    | '/seller/dashboard/orders/items/$id'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/auth'
    | '/cart'
    | '/customer'
    | '/seller'
    | '/customer/order'
    | '/product/all'
    | '/customer/update-password'
    | '/payment/success'
    | '/product/$id'
    | '/cart/'
    | '/checkout/'
    | '/admin/dashboard/order-items'
    | '/admin/dashboard/orders'
    | '/seller/dashboard/orders'
    | '/admin/dashboard/account-settings'
    | '/admin/dashboard/update-password'
    | '/auth/(customer)/login'
    | '/auth/(customer)/register'
    | '/auth/admin/login'
    | '/auth/seller/login'
    | '/auth/seller/register'
    | '/customer/address/$id'
    | '/customer/address/create'
    | '/customer/order/completed'
    | '/customer/order/processing'
    | '/customer/profile/update'
    | '/product/all/best-sell'
    | '/product/all/feature-product'
    | '/product/all/new-arrival'
    | '/seller/dashboard/account-settings'
    | '/seller/dashboard/business-information'
    | '/seller/dashboard/update-password'
    | '/admin/dashboard/'
    | '/admin/profile/'
    | '/customer/address/'
    | '/customer/order/'
    | '/customer/profile/'
    | '/product/all/'
    | '/seller/dashboard/'
    | '/seller/profile/'
    | '/admin/dashboard/admins/create'
    | '/admin/dashboard/categories/create'
    | '/admin/dashboard/products/$id'
    | '/admin/dashboard/sellers/$id'
    | '/auth/(customer)/verify/$code'
    | '/auth/seller/verify/$code'
    | '/admin/dashboard/admins/'
    | '/admin/dashboard/categories/'
    | '/admin/dashboard/customers/'
    | '/admin/dashboard/order-items/'
    | '/admin/dashboard/orders/'
    | '/admin/dashboard/products/'
    | '/admin/dashboard/sellers/'
    | '/seller/dashboard/orders/'
    | '/seller/dashboard/products/'
    | '/admin/dashboard/admins/(edit)/$id'
    | '/admin/dashboard/categories/(edit)/$id'
    | '/admin/dashboard/order-items/(order-items)/all'
    | '/admin/dashboard/order-items/(order-items)/delivered'
    | '/admin/dashboard/order-items/(order-items)/fail-delivery'
    | '/admin/dashboard/order-items/(order-items)/shipping'
    | '/admin/dashboard/orders/(orders)/all'
    | '/seller/dashboard/orders/(orders)/all'
    | '/seller/dashboard/orders/(orders)/cancel'
    | '/seller/dashboard/orders/(orders)/delivered'
    | '/seller/dashboard/orders/(orders)/fail-delivery'
    | '/seller/dashboard/orders/(orders)/return-request'
    | '/seller/dashboard/orders/(orders)/shipping'
    | '/seller/dashboard/orders/(orders)/toship'
    | '/seller/dashboard/products/(product)/create'
    | '/admin/dashboard/order-items/(order-items)/items/$id'
    | '/seller/dashboard/products/(product)/$id_/edit'
    | '/seller/dashboard/products/(product)/$id/'
    | '/seller/dashboard/products/(product)/$id/variants/$variantId'
    | '/seller/dashboard/orders/(orders)/items/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  CartRouteRoute: typeof CartRouteRouteWithChildren
  CustomerRouteRoute: typeof CustomerRouteRouteWithChildren
  SellerRouteRoute: typeof SellerRouteRouteWithChildren
  ProductAllRouteRoute: typeof ProductAllRouteRouteWithChildren
  PaymentSuccessRoute: typeof PaymentSuccessRoute
  ProductIdRoute: typeof ProductIdRoute
  CheckoutIndexRoute: typeof CheckoutIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  CartRouteRoute: CartRouteRouteWithChildren,
  CustomerRouteRoute: CustomerRouteRouteWithChildren,
  SellerRouteRoute: SellerRouteRouteWithChildren,
  ProductAllRouteRoute: ProductAllRouteRouteWithChildren,
  PaymentSuccessRoute: PaymentSuccessRoute,
  ProductIdRoute: ProductIdRoute,
  CheckoutIndexRoute: CheckoutIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/auth",
        "/cart",
        "/customer",
        "/seller",
        "/product/all",
        "/payment/success",
        "/product/$id",
        "/checkout/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/dashboard/order-items",
        "/admin/dashboard/orders",
        "/admin/dashboard/account-settings",
        "/admin/dashboard/update-password",
        "/admin/dashboard/",
        "/admin/profile/",
        "/admin/dashboard/admins/create",
        "/admin/dashboard/categories/create",
        "/admin/dashboard/products/$id",
        "/admin/dashboard/sellers/$id",
        "/admin/dashboard/admins/",
        "/admin/dashboard/categories/",
        "/admin/dashboard/customers/",
        "/admin/dashboard/products/",
        "/admin/dashboard/sellers/",
        "/admin/dashboard/admins/(edit)/$id",
        "/admin/dashboard/categories/(edit)/$id"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/(customer)/login",
        "/auth/(customer)/register",
        "/auth/admin/login",
        "/auth/seller/login",
        "/auth/seller/register",
        "/auth/(customer)/verify/$code",
        "/auth/seller/verify/$code"
      ]
    },
    "/cart": {
      "filePath": "cart/route.tsx",
      "children": [
        "/cart/"
      ]
    },
    "/customer": {
      "filePath": "customer/route.tsx",
      "children": [
        "/customer/order",
        "/customer/update-password",
        "/customer/address/$id",
        "/customer/address/create",
        "/customer/profile/update",
        "/customer/address/",
        "/customer/profile/"
      ]
    },
    "/seller": {
      "filePath": "seller/route.tsx",
      "children": [
        "/seller/dashboard/orders",
        "/seller/dashboard/account-settings",
        "/seller/dashboard/business-information",
        "/seller/dashboard/update-password",
        "/seller/dashboard/",
        "/seller/profile/",
        "/seller/dashboard/products/",
        "/seller/dashboard/products/(product)/create",
        "/seller/dashboard/products/(product)/$id_/edit",
        "/seller/dashboard/products/(product)/$id/",
        "/seller/dashboard/products/(product)/$id/variants/$variantId"
      ]
    },
    "/customer/order": {
      "filePath": "customer/order/route.tsx",
      "parent": "/customer",
      "children": [
        "/customer/order/completed",
        "/customer/order/processing",
        "/customer/order/"
      ]
    },
    "/product/all": {
      "filePath": "product/all/route.tsx",
      "children": [
        "/product/all/best-sell",
        "/product/all/feature-product",
        "/product/all/new-arrival",
        "/product/all/"
      ]
    },
    "/customer/update-password": {
      "filePath": "customer/update-password.tsx",
      "parent": "/customer"
    },
    "/payment/success": {
      "filePath": "payment/success.tsx"
    },
    "/product/$id": {
      "filePath": "product/$id.tsx"
    },
    "/cart/": {
      "filePath": "cart/index.tsx",
      "parent": "/cart"
    },
    "/checkout/": {
      "filePath": "checkout/index.tsx"
    },
    "/admin/dashboard/order-items": {
      "filePath": "admin/dashboard/order-items/route.tsx",
      "parent": "/admin",
      "children": [
        "/admin/dashboard/order-items/",
        "/admin/dashboard/order-items/(order-items)/all",
        "/admin/dashboard/order-items/(order-items)/delivered",
        "/admin/dashboard/order-items/(order-items)/fail-delivery",
        "/admin/dashboard/order-items/(order-items)/shipping",
        "/admin/dashboard/order-items/(order-items)/items/$id"
      ]
    },
    "/admin/dashboard/orders": {
      "filePath": "admin/dashboard/orders/route.tsx",
      "parent": "/admin",
      "children": [
        "/admin/dashboard/orders/",
        "/admin/dashboard/orders/(orders)/all"
      ]
    },
    "/seller/dashboard/orders": {
      "filePath": "seller/dashboard/orders/route.tsx",
      "parent": "/seller",
      "children": [
        "/seller/dashboard/orders/",
        "/seller/dashboard/orders/(orders)/all",
        "/seller/dashboard/orders/(orders)/cancel",
        "/seller/dashboard/orders/(orders)/delivered",
        "/seller/dashboard/orders/(orders)/fail-delivery",
        "/seller/dashboard/orders/(orders)/return-request",
        "/seller/dashboard/orders/(orders)/shipping",
        "/seller/dashboard/orders/(orders)/toship",
        "/seller/dashboard/orders/(orders)/items/$id/"
      ]
    },
    "/admin/dashboard/account-settings": {
      "filePath": "admin/dashboard/account-settings.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/update-password": {
      "filePath": "admin/dashboard/update-password.tsx",
      "parent": "/admin"
    },
    "/auth/(customer)/login": {
      "filePath": "auth/(customer)/login.tsx",
      "parent": "/auth"
    },
    "/auth/(customer)/register": {
      "filePath": "auth/(customer)/register.tsx",
      "parent": "/auth"
    },
    "/auth/admin/login": {
      "filePath": "auth/admin/login.tsx",
      "parent": "/auth"
    },
    "/auth/seller/login": {
      "filePath": "auth/seller/login.tsx",
      "parent": "/auth"
    },
    "/auth/seller/register": {
      "filePath": "auth/seller/register.tsx",
      "parent": "/auth"
    },
    "/customer/address/$id": {
      "filePath": "customer/address/$id.tsx",
      "parent": "/customer"
    },
    "/customer/address/create": {
      "filePath": "customer/address/create.tsx",
      "parent": "/customer"
    },
    "/customer/order/completed": {
      "filePath": "customer/order/completed.tsx",
      "parent": "/customer/order"
    },
    "/customer/order/processing": {
      "filePath": "customer/order/processing.tsx",
      "parent": "/customer/order"
    },
    "/customer/profile/update": {
      "filePath": "customer/profile/update.tsx",
      "parent": "/customer"
    },
    "/product/all/best-sell": {
      "filePath": "product/all/best-sell.tsx",
      "parent": "/product/all"
    },
    "/product/all/feature-product": {
      "filePath": "product/all/feature-product.tsx",
      "parent": "/product/all"
    },
    "/product/all/new-arrival": {
      "filePath": "product/all/new-arrival.tsx",
      "parent": "/product/all"
    },
    "/seller/dashboard/account-settings": {
      "filePath": "seller/dashboard/account-settings.tsx",
      "parent": "/seller"
    },
    "/seller/dashboard/business-information": {
      "filePath": "seller/dashboard/business-information.tsx",
      "parent": "/seller"
    },
    "/seller/dashboard/update-password": {
      "filePath": "seller/dashboard/update-password.tsx",
      "parent": "/seller"
    },
    "/admin/dashboard/": {
      "filePath": "admin/dashboard/index.tsx",
      "parent": "/admin"
    },
    "/admin/profile/": {
      "filePath": "admin/profile/index.tsx",
      "parent": "/admin"
    },
    "/customer/address/": {
      "filePath": "customer/address/index.tsx",
      "parent": "/customer"
    },
    "/customer/order/": {
      "filePath": "customer/order/index.tsx",
      "parent": "/customer/order"
    },
    "/customer/profile/": {
      "filePath": "customer/profile/index.tsx",
      "parent": "/customer"
    },
    "/product/all/": {
      "filePath": "product/all/index.tsx",
      "parent": "/product/all"
    },
    "/seller/dashboard/": {
      "filePath": "seller/dashboard/index.tsx",
      "parent": "/seller"
    },
    "/seller/profile/": {
      "filePath": "seller/profile/index.tsx",
      "parent": "/seller"
    },
    "/admin/dashboard/admins/create": {
      "filePath": "admin/dashboard/admins/create.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/categories/create": {
      "filePath": "admin/dashboard/categories/create.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/products/$id": {
      "filePath": "admin/dashboard/products/$id.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/sellers/$id": {
      "filePath": "admin/dashboard/sellers/$id.tsx",
      "parent": "/admin"
    },
    "/auth/(customer)/verify/$code": {
      "filePath": "auth/(customer)/verify/$code.tsx",
      "parent": "/auth"
    },
    "/auth/seller/verify/$code": {
      "filePath": "auth/seller/verify/$code.tsx",
      "parent": "/auth"
    },
    "/admin/dashboard/admins/": {
      "filePath": "admin/dashboard/admins/index.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/categories/": {
      "filePath": "admin/dashboard/categories/index.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/customers/": {
      "filePath": "admin/dashboard/customers/index.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/order-items/": {
      "filePath": "admin/dashboard/order-items/index.tsx",
      "parent": "/admin/dashboard/order-items"
    },
    "/admin/dashboard/orders/": {
      "filePath": "admin/dashboard/orders/index.tsx",
      "parent": "/admin/dashboard/orders"
    },
    "/admin/dashboard/products/": {
      "filePath": "admin/dashboard/products/index.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/sellers/": {
      "filePath": "admin/dashboard/sellers/index.tsx",
      "parent": "/admin"
    },
    "/seller/dashboard/orders/": {
      "filePath": "seller/dashboard/orders/index.tsx",
      "parent": "/seller/dashboard/orders"
    },
    "/seller/dashboard/products/": {
      "filePath": "seller/dashboard/products/index.tsx",
      "parent": "/seller"
    },
    "/admin/dashboard/admins/(edit)/$id": {
      "filePath": "admin/dashboard/admins/(edit)/$id.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/categories/(edit)/$id": {
      "filePath": "admin/dashboard/categories/(edit)/$id.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/order-items/(order-items)/all": {
      "filePath": "admin/dashboard/order-items/(order-items)/all.tsx",
      "parent": "/admin/dashboard/order-items"
    },
    "/admin/dashboard/order-items/(order-items)/delivered": {
      "filePath": "admin/dashboard/order-items/(order-items)/delivered.tsx",
      "parent": "/admin/dashboard/order-items"
    },
    "/admin/dashboard/order-items/(order-items)/fail-delivery": {
      "filePath": "admin/dashboard/order-items/(order-items)/fail-delivery.tsx",
      "parent": "/admin/dashboard/order-items"
    },
    "/admin/dashboard/order-items/(order-items)/shipping": {
      "filePath": "admin/dashboard/order-items/(order-items)/shipping.tsx",
      "parent": "/admin/dashboard/order-items"
    },
    "/admin/dashboard/orders/(orders)/all": {
      "filePath": "admin/dashboard/orders/(orders)/all.tsx",
      "parent": "/admin/dashboard/orders"
    },
    "/seller/dashboard/orders/(orders)/all": {
      "filePath": "seller/dashboard/orders/(orders)/all.tsx",
      "parent": "/seller/dashboard/orders"
    },
    "/seller/dashboard/orders/(orders)/cancel": {
      "filePath": "seller/dashboard/orders/(orders)/cancel.tsx",
      "parent": "/seller/dashboard/orders"
    },
    "/seller/dashboard/orders/(orders)/delivered": {
      "filePath": "seller/dashboard/orders/(orders)/delivered.tsx",
      "parent": "/seller/dashboard/orders"
    },
    "/seller/dashboard/orders/(orders)/fail-delivery": {
      "filePath": "seller/dashboard/orders/(orders)/fail-delivery.tsx",
      "parent": "/seller/dashboard/orders"
    },
    "/seller/dashboard/orders/(orders)/return-request": {
      "filePath": "seller/dashboard/orders/(orders)/return-request.tsx",
      "parent": "/seller/dashboard/orders"
    },
    "/seller/dashboard/orders/(orders)/shipping": {
      "filePath": "seller/dashboard/orders/(orders)/shipping.tsx",
      "parent": "/seller/dashboard/orders"
    },
    "/seller/dashboard/orders/(orders)/toship": {
      "filePath": "seller/dashboard/orders/(orders)/toship.tsx",
      "parent": "/seller/dashboard/orders"
    },
    "/seller/dashboard/products/(product)/create": {
      "filePath": "seller/dashboard/products/(product)/create.tsx",
      "parent": "/seller"
    },
    "/admin/dashboard/order-items/(order-items)/items/$id": {
      "filePath": "admin/dashboard/order-items/(order-items)/items/$id.tsx",
      "parent": "/admin/dashboard/order-items"
    },
    "/seller/dashboard/products/(product)/$id_/edit": {
      "filePath": "seller/dashboard/products/(product)/$id_/edit.tsx",
      "parent": "/seller"
    },
    "/seller/dashboard/products/(product)/$id/": {
      "filePath": "seller/dashboard/products/(product)/$id/index.tsx",
      "parent": "/seller"
    },
    "/seller/dashboard/products/(product)/$id/variants/$variantId": {
      "filePath": "seller/dashboard/products/(product)/$id/variants/$variantId.tsx",
      "parent": "/seller"
    },
    "/seller/dashboard/orders/(orders)/items/$id/": {
      "filePath": "seller/dashboard/orders/(orders)/items/$id/index.tsx",
      "parent": "/seller/dashboard/orders"
    }
  }
}
ROUTE_MANIFEST_END */
